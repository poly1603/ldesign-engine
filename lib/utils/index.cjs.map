{"version":3,"file":"index.cjs","sources":["../../src/utils/index.ts"],"sourcesContent":["/**\n * @ldesign/engine/utils 工具函数\n * \n * 提供各种实用工具函数\n */\n\n// ============ 基础工具函数 ============\n\n/**\n * 数组分块\n */\nexport function chunk<T>(array: T[], size: number): T[][] {\n  const chunks: T[][] = []\n  for (let i = 0; i < array.length; i += size) {\n    chunks.push(array.slice(i, i + size))\n  }\n  return chunks\n}\n\n/**\n * 防抖函数\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  fn: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: number | null = null\n\n  return function (this: any, ...args: Parameters<T>) {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId)\n    }\n\n    timeoutId = window.setTimeout(() => {\n      fn.apply(this, args)\n      timeoutId = null\n    }, delay)\n  }\n}\n\n/**\n * 节流函数\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  fn: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let lastTime = 0\n\n  return function (this: any, ...args: Parameters<T>) {\n    const now = Date.now()\n\n    if (now - lastTime >= delay) {\n      fn.apply(this, args)\n      lastTime = now\n    }\n  }\n}\n\n/**\n * 延迟函数\n */\nexport function delay(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\n/**\n * 深拷贝\n */\nexport function deepClone<T>(obj: T): T {\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(item => deepClone(item)) as any\n  }\n\n  const cloned: any = {}\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      cloned[key] = deepClone((obj as any)[key])\n    }\n  }\n  return cloned\n}\n\n/**\n * 生成唯一ID\n */\nexport function generateId(): string {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\n/**\n * 格式化文件大小\n */\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 B'\n  const k = 1024\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return `${Math.round((bytes / k ** i) * 100) / 100} ${sizes[i]}`\n}\n\n/**\n * 格式化时间\n */\nexport function formatTime(ms: number): string {\n  if (ms < 1000) return `${ms}ms`\n  if (ms < 60000) return `${(ms / 1000).toFixed(2)}s`\n  return `${Math.floor(ms / 60000)}m ${Math.floor((ms % 60000) / 1000)}s`\n}\n\n/**\n * 获取嵌套值\n */\nexport function getNestedValue(obj: any, path: string): any {\n  return path.split('.').reduce((current, key) => current?.[key], obj)\n}\n\n/**\n * 设置嵌套值\n */\nexport function setNestedValue(obj: any, path: string, value: any): void {\n  const keys = path.split('.')\n  const lastKey = keys.pop()!\n  const target = keys.reduce((current, key) => {\n    if (!(key in current)) {\n      current[key] = {}\n    }\n    return current[key]\n  }, obj)\n  target[lastKey] = value\n}\n\n/**\n * 分组\n */\nexport function groupBy<T>(array: T[], key: keyof T | ((item: T) => string)): Record<string, T[]> {\n  return array.reduce((groups, item) => {\n    const groupKey = typeof key === 'function' ? key(item) : String(item[key])\n    if (!groups[groupKey]) {\n      groups[groupKey] = []\n    }\n    groups[groupKey].push(item)\n    return groups\n  }, {} as Record<string, T[]>)\n}\n\n/**\n * 去重\n */\nexport function unique<T>(array: T[]): T[] {\n  return Array.from(new Set(array))\n}\n\n/**\n * 检查是否为空\n */\nexport function isEmpty(value: any): boolean {\n  if (value == null) return true\n  if (typeof value === 'string') return value.trim() === ''\n  if (Array.isArray(value)) return value.length === 0\n  if (typeof value === 'object') return Object.keys(value).length === 0\n  return false\n}\n\n/**\n * 检查是否为函数\n */\nexport function isFunction(value: any): value is (...args: any[]) => unknown {\n  return typeof value === 'function'\n}\n\n/**\n * 检查是否为对象\n */\nexport function isObject(value: any): value is object {\n  return value !== null && typeof value === 'object'\n}\n\n/**\n * 检查是否为 Promise\n */\nexport function isPromise(value: any): value is Promise<any> {\n  return value instanceof Promise\n}\n\n/**\n * 安全的 JSON parse\n */\nexport function safeJsonParse(json: string, fallback: any = null): any {\n  try {\n    return JSON.parse(json)\n  } catch {\n    return fallback\n  }\n}\n\n/**\n * 安全的 JSON stringify\n */\nexport function safeJsonStringify(obj: any, fallback: string = '{}'): string {\n  try {\n    return JSON.stringify(obj)\n  } catch {\n    return fallback\n  }\n}\n\n/**\n * 重试函数\n */\nexport async function retry<T>(\n  fn: () => Promise<T>,\n  options: {\n    maxRetries?: number\n    delay?: number\n    backoff?: number\n  } = {}\n): Promise<T> {\n  const { maxRetries = 3, delay: initialDelay = 1000, backoff = 2 } = options\n\n  let lastError: unknown = null\n  let currentDelay = initialDelay\n\n  for (let i = 0; i <= maxRetries; i++) {\n    try {\n      return await fn()\n    } catch (error) {\n      lastError = error\n      if (i < maxRetries) {\n        await new Promise(resolve => setTimeout(resolve, currentDelay))\n        currentDelay *= backoff\n      }\n    }\n  }\n\n  throw (lastError instanceof Error ? lastError : new Error('Unknown error'))\n}\n\n// ============ 内存管理工具（新增） ============\n\nexport { createManagedContext, destroyGlobalContext, getGlobalContext } from './memory-management';\nexport { createMemoryMonitor, MemoryMonitor } from './memory-monitor';\nexport type { MemoryError, MemoryMonitorConfig, MemoryStats, MemoryWarning } from './memory-monitor';\nexport { createResourceManager, ResourceManager } from './resource-manager';\n\n// ============ LRU缓存（新增） ============\n\nexport { createLRUCache, LRUCache } from './lru-cache';\nexport type { LRUCacheOptions } from './lru-cache';\n"],"names":["delay"],"mappings":"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"}