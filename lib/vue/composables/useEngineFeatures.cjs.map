{"version":3,"file":"useEngineFeatures.cjs","sources":["../../../src/vue/composables/useEngineFeatures.ts"],"sourcesContent":["/**\r\n * Engine 功能相关的组合式 API\r\n * 提供便捷的功能访问和状态管理\r\n */\r\n\r\nimport type { LogLevel } from '../../types/logger'\r\nimport type { NotificationOptions } from '../../types/notification'\r\nimport { computed, onMounted, onUnmounted, ref, type Ref } from 'vue'\r\nimport { useEngine } from './useEngine'\r\n\r\n/**\r\n * 使用通知系统\r\n * 提供便捷的通知发送接口\r\n */\r\nexport function useNotification() {\r\n  const engine = useEngine()\r\n\r\n  const show = (options: NotificationOptions) => {\r\n    return engine.notifications.show(options as any)\r\n  }\r\n\r\n  const success = (message: string, title?: string, duration?: number) => {\r\n    return engine.notifications.show({\r\n      type: 'success',\r\n      title: title || 'Success',\r\n      content: message,\r\n      duration: duration || 3000,\r\n    } as any)\r\n  }\r\n\r\n  const error = (message: string, title?: string, duration?: number) => {\r\n    return engine.notifications.show({\r\n      type: 'error',\r\n      title: title || 'Error',\r\n      content: message,\r\n      duration: duration || 5000,\r\n    } as any)\r\n  }\r\n\r\n  const warning = (message: string, title?: string, duration?: number) => {\r\n    return engine.notifications.show({\r\n      type: 'warning',\r\n      title: title || 'Warning',\r\n      content: message,\r\n      duration: duration || 4000,\r\n    } as any)\r\n  }\r\n\r\n  const info = (message: string, title?: string, duration?: number) => {\r\n    return engine.notifications.show({\r\n      type: 'info',\r\n      title: title || 'Info',\r\n      content: message,\r\n      duration: duration || 3000,\r\n    } as any)\r\n  }\r\n\r\n  const loading = (message: string, title?: string) => {\r\n    return engine.notifications.show({\r\n      type: 'info',\r\n      title: title || 'Loading',\r\n      content: message,\r\n      duration: 0, // 不自动关闭\r\n      closable: false,\r\n    } as any)\r\n  }\r\n\r\n  const clear = () => {\r\n    ;(engine.notifications as any).hideAll?.()\r\n  }\r\n\r\n  return {\r\n    show,\r\n    success,\r\n    error,\r\n    warning,\r\n    info,\r\n    loading,\r\n    clear,\r\n  }\r\n}\r\n\r\n/**\r\n * 使用日志系统\r\n * 提供响应式的日志功能\r\n */\r\nexport function useLogger(context?: string) {\r\n  const engine = useEngine()\r\n  const logger = engine.logger\r\n\r\n  const logs: Ref<Array<{ level: LogLevel; message: string; timestamp: Date }>> = ref([])\r\n  const maxLogs = 100\r\n\r\n  const addLog = (level: LogLevel, message: string) => {\r\n    logs.value.push({ level, message, timestamp: new Date() })\r\n    if (logs.value.length > maxLogs) {\r\n      logs.value.shift()\r\n    }\r\n  }\r\n\r\n  const debug = (message: string, ...args: unknown[]) => {\r\n    logger.debug(context ? `[${context}] ${message}` : message, ...args)\r\n    addLog('debug', message)\r\n  }\r\n\r\n  const info = (message: string, ...args: unknown[]) => {\r\n    logger.info(context ? `[${context}] ${message}` : message, ...args)\r\n    addLog('info', message)\r\n  }\r\n\r\n  const warn = (message: string, ...args: unknown[]) => {\r\n    logger.warn(context ? `[${context}] ${message}` : message, ...args)\r\n    addLog('warn', message)\r\n  }\r\n\r\n  const error = (message: string, ...args: unknown[]) => {\r\n    logger.error(context ? `[${context}] ${message}` : message, ...args)\r\n    addLog('error', message)\r\n  }\r\n\r\n  const clearLogs = () => {\r\n    logs.value = []\r\n  }\r\n\r\n  return {\r\n    logs: computed(() => logs.value),\r\n    debug,\r\n    info,\r\n    warn,\r\n    error,\r\n    clearLogs,\r\n  }\r\n}\r\n\r\n/**\r\n * 使用缓存系统\r\n * 提供响应式的缓存管理\r\n */\r\nexport function useCache<T = unknown>(key: string, defaultValue?: T) {\r\n  const engine = useEngine()\r\n  const cache = engine.cache\r\n\r\n  const value: Ref<T | undefined> = ref((cache.get(key) as T) || defaultValue) as Ref<T | undefined>\r\n\r\n  const set = (newValue: T, ttl?: number) => {\r\n    cache.set(key, newValue, ttl)\r\n    value.value = newValue\r\n  }\r\n\r\n  const remove = () => {\r\n    cache.delete(key)\r\n    value.value = defaultValue\r\n  }\r\n\r\n  const refresh = () => {\r\n    value.value = (cache.get(key) as T) || defaultValue\r\n  }\r\n\r\n  // 监听缓存变化\r\n  const unsubscribe = cache.on?.('change', (...args: unknown[]) => {\r\n    const changedKey = args[0] as string\r\n    if (changedKey === key) {\r\n      refresh()\r\n    }\r\n  })\r\n\r\n  onUnmounted(() => {\r\n    unsubscribe?.()\r\n  })\r\n\r\n  return {\r\n    value: computed(() => value.value),\r\n    set,\r\n    remove,\r\n    refresh,\r\n  }\r\n}\r\n\r\n/**\r\n * 使用事件系统\r\n * 提供事件监听和发送\r\n */\r\nexport function useEvents() {\r\n  const engine = useEngine()\r\n  const events = engine.events\r\n  const listeners: Array<() => void> = []\r\n\r\n  const on = (event: string, handler: (...args: unknown[]) => void) => {\r\n    events.on(event, handler)\r\n    const off = () => events.off(event, handler)\r\n    listeners.push(off)\r\n    return off\r\n  }\r\n\r\n  const once = (event: string, handler: (...args: unknown[]) => void) => {\r\n    events.once(event, handler)\r\n  }\r\n\r\n  const emit = (event: string, ...args: unknown[]) => {\r\n    events.emit(event, ...args)\r\n  }\r\n\r\n  const off = (event: string, handler?: (...args: unknown[]) => void) => {\r\n    if (handler) {\r\n      events.off(event, handler)\r\n    }\r\n  }\r\n\r\n  // 组件卸载时自动清理\r\n  onUnmounted(() => {\r\n    listeners.forEach(off => off())\r\n  })\r\n\r\n  return {\r\n    on,\r\n    once,\r\n    emit,\r\n    off,\r\n  }\r\n}\r\n\r\n/**\r\n * 使用性能监控\r\n * 提供性能指标的响应式访问\r\n */\r\nexport function usePerformance() {\r\n  const engine = useEngine()\r\n  const performance = engine.performance\r\n\r\n  const metrics: Ref<Record<string, unknown>> = ref({})\r\n  const isMonitoring = ref(false)\r\n\r\n  const startMonitoring = () => {\r\n    if (isMonitoring.value) return\r\n\r\n    isMonitoring.value = true\r\n    performance.startMonitoring()\r\n\r\n    // 定期更新指标\r\n    const interval = setInterval(() => {\r\n      if (!isMonitoring.value) {\r\n        clearInterval(interval)\r\n        return\r\n      }\r\n\r\n      // 使用实际存在的方法\r\n      const currentMetrics = performance.collectMetrics()\r\n      metrics.value = {\r\n        memory: currentMetrics.memory,\r\n        rendering: currentMetrics.rendering,\r\n        network: currentMetrics.network,\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  const stopMonitoring = () => {\r\n    isMonitoring.value = false\r\n    performance.stopMonitoring()\r\n  }\r\n\r\n  const measure = (name: string, fn: () => void | Promise<void>) => {\r\n    // 使用 startEvent/endEvent 来模拟 measure\r\n     \r\n    const eventId = performance.startEvent('custom' as any, name)\r\n    try {\r\n      const result = fn()\r\n      if (result instanceof Promise) {\r\n        return result.finally(() => performance.endEvent(eventId))\r\n      }\r\n      performance.endEvent(eventId)\r\n      return result\r\n    } catch (error) {\r\n      performance.endEvent(eventId)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  const mark = (name: string) => {\r\n    // 使用 recordEvent 来模拟 mark\r\n    performance.recordEvent({\r\n       \r\n      type: 'custom' as any,\r\n      name,\r\n      startTime: Date.now(),\r\n    })\r\n  }\r\n\r\n  onMounted(() => {\r\n    if (engine.config.get('features.enablePerformanceMonitoring')) {\r\n      startMonitoring()\r\n    }\r\n  })\r\n\r\n  onUnmounted(() => {\r\n    stopMonitoring()\r\n  })\r\n\r\n  return {\r\n    metrics: computed(() => metrics.value),\r\n    isMonitoring: computed(() => isMonitoring.value),\r\n    startMonitoring,\r\n    stopMonitoring,\r\n    measure,\r\n    mark,\r\n  }\r\n}\r\n\r\n/**\r\n * 使用配置系统\r\n * 提供配置的响应式访问和修改\r\n */\r\nexport function useConfig<T = unknown>(path: string, defaultValue?: T) {\r\n  const engine = useEngine()\r\n  const config = engine.config\r\n\r\n  const value: Ref<T> = ref((config.get(path, defaultValue) as T)) as Ref<T>\r\n\r\n  const set = (newValue: T) => {\r\n    config.set(path, newValue)\r\n    value.value = newValue\r\n  }\r\n\r\n  const reset = () => {\r\n    config.reset(path)\r\n    value.value = config.get(path, defaultValue) as T\r\n  }\r\n\r\n  // 监听配置变化\r\n  const unsubscribe = config.on('change', (...args: unknown[]) => {\r\n    const changedPath = args[0] as string\r\n    if (changedPath === path || changedPath.startsWith(`${path}.`)) {\r\n      value.value = config.get(path, defaultValue) as T\r\n    }\r\n  })\r\n\r\n  onUnmounted(() => {\r\n    unsubscribe()\r\n  })\r\n\r\n  return {\r\n    value: computed(() => value.value),\r\n    set,\r\n    reset,\r\n  }\r\n}\r\n\r\n/**\r\n * 使用错误处理\r\n * 提供错误捕获和处理\r\n */\r\nexport function useErrorHandler() {\r\n  const engine = useEngine()\r\n  const errors = engine.errors\r\n  const errorList: Ref<Error[]> = ref([])\r\n\r\n  const handle = (error: Error, context?: string) => {\r\n    errorList.value.push(error)\r\n    errors.handle(error, context)\r\n  }\r\n\r\n  const capture = async <T>(\r\n    fn: () => T | Promise<T>,\r\n    context?: string\r\n  ): Promise<[T | null, Error | null]> => {\r\n    try {\r\n      const result = await fn()\r\n      return [result, null]\r\n    } catch (error) {\r\n      handle(error as Error, context)\r\n      return [null, error as Error]\r\n    }\r\n  }\r\n\r\n  const clearErrors = () => {\r\n    errorList.value = []\r\n  }\r\n\r\n  return {\r\n    errors: computed(() => errorList.value),\r\n    handle,\r\n    capture,\r\n    clearErrors,\r\n  }\r\n}\r\n\r\n/**\r\n * 使用插件系统\r\n * 提供插件状态管理\r\n */\r\nexport function usePlugins() {\r\n  const engine = useEngine()\r\n  const plugins = engine.plugins\r\n\r\n  const installedPlugins = computed(() => plugins.getInstalledPlugins())\r\n  const pluginCount = computed(() => installedPlugins.value.length)\r\n\r\n  const isInstalled = (name: string) => {\r\n    return plugins.isInstalled(name)\r\n  }\r\n\r\n  const getPlugin = (name: string) => {\r\n    return plugins.getPlugin(name)\r\n  }\r\n\r\n  const getPluginStatus = (name: string) => {\r\n    return plugins.getPluginStatus?.(name)\r\n  }\r\n\r\n  return {\r\n    plugins: installedPlugins,\r\n    count: pluginCount,\r\n    isInstalled,\r\n    getPlugin,\r\n    getPluginStatus,\r\n  }\r\n}\r\n"],"names":["useEngine","ref","computed","onUnmounted","off","onMounted"],"mappings":"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"}