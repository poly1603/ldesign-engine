{"version":3,"file":"index.cjs","sources":["../../src/constants/index.ts"],"sourcesContent":["/**\r\n * 引擎常量定义\r\n * 包含系统中使用的各种常量值\r\n */\r\n\r\n/**\r\n * 默认配置常量\r\n * 🎯 提供引擎的默认配置值\r\n */\r\nexport const DEFAULT_CONFIG = {\r\n  debug: false,\r\n  appName: 'Vue3 Engine App',\r\n  version: '1.0.0',\r\n} as const\r\n\r\n/**\r\n * 性能优化常量\r\n * 🚀 统一管理性能优化相关的配置值\r\n */\r\nexport const PERFORMANCE_CONSTANTS = {\r\n  // 批处理配置\r\n  BATCH_PROCESSOR: {\r\n    DEFAULT_BATCH_SIZE: 20,\r\n    DEFAULT_INTERVAL: 5000, // 5秒\r\n    MAX_WAIT_TIME: 10000, // 10秒\r\n  },\r\n\r\n  // 缓存优化\r\n  CACHE_OPTIMIZATION: {\r\n    CLEANUP_BATCH_SIZE: 20,\r\n    CLEANUP_INTERVAL: 5000, // 5秒\r\n    STATS_CLEANUP_INTERVAL: 300000, // 5分钟\r\n    MAX_SIZE_DEFAULT: 100,\r\n    DEFAULT_TTL: 300000, // 5分钟\r\n  },\r\n\r\n  // 事件优化\r\n  EVENT_OPTIMIZATION: {\r\n    STATS_CLEANUP_INTERVAL: 300000, // 5分钟\r\n    BATCH_REMOVE_THRESHOLD: 10,\r\n    MAX_LISTENERS_DEFAULT: 100,\r\n  },\r\n\r\n  // 内存管理\r\n  MEMORY_MANAGEMENT: {\r\n    OBJECT_POOL_MAX_SIZE: 100,\r\n    GC_THRESHOLD: 1000, // 触发垃圾回收的阈值\r\n  },\r\n\r\n  // 性能阈值\r\n  THRESHOLDS: {\r\n    // 响应时间阈值（毫秒）\r\n    RESPONSE_TIME: {\r\n      EXCELLENT: 50,\r\n      GOOD: 100,\r\n      ACCEPTABLE: 500,\r\n      POOR: 1000,\r\n    },\r\n\r\n    // FPS阈值\r\n    FPS: {\r\n      EXCELLENT: 60,\r\n      GOOD: 45,\r\n      ACCEPTABLE: 30,\r\n      POOR: 15,\r\n    },\r\n\r\n    // 内存使用阈值（MB）\r\n    MEMORY: {\r\n      LOW: 50,\r\n      WARNING: 100,\r\n      CRITICAL: 200,\r\n      EMERGENCY: 500,\r\n    },\r\n\r\n    // 缓存命中率阈值\r\n    CACHE_HIT_RATE: {\r\n      EXCELLENT: 0.9,\r\n      GOOD: 0.8,\r\n      ACCEPTABLE: 0.6,\r\n      POOR: 0.4,\r\n    },\r\n  },\r\n} as const\r\n\r\n/**\r\n * 事件名称常量\r\n * 📡 定义引擎系统中所有事件的标准名称\r\n */\r\nexport const EVENTS = {\r\n  // 引擎生命周期事件\r\n  ENGINE_MOUNTED: 'engine:mounted',\r\n  ENGINE_UNMOUNTED: 'engine:unmounted',\r\n  ENGINE_ERROR: 'engine:error',\r\n  ENGINE_READY: 'engine:ready',\r\n  ENGINE_DESTROYED: 'engine:destroyed',\r\n\r\n  // 插件相关事件\r\n  PLUGIN_REGISTERED: 'plugin:registered',\r\n  PLUGIN_UNREGISTERED: 'plugin:unregistered',\r\n  PLUGIN_INSTALLED: 'plugin:installed',\r\n  PLUGIN_UNINSTALLED: 'plugin:uninstalled',\r\n  PLUGIN_ERROR: 'plugin:error',\r\n\r\n  // 中间件相关事件\r\n  MIDDLEWARE_ADDED: 'middleware:added',\r\n  MIDDLEWARE_REMOVED: 'middleware:removed',\r\n  MIDDLEWARE_EXECUTED: 'middleware:executed',\r\n\r\n  // 状态管理事件\r\n  STATE_CHANGED: 'state:changed',\r\n  STATE_RESET: 'state:reset',\r\n\r\n  // 错误处理事件\r\n  ERROR_CAPTURED: 'error:captured',\r\n  ERROR_HANDLED: 'error:handled',\r\n\r\n  // 通知相关事件\r\n  NOTIFICATION_SHOWN: 'notification:shown',\r\n  NOTIFICATION_HIDDEN: 'notification:hidden',\r\n  NOTIFICATION_CLICKED: 'notification:clicked',\r\n\r\n  // 性能监控事件\r\n  PERFORMANCE_MARK: 'performance:mark',\r\n  PERFORMANCE_MEASURE: 'performance:measure',\r\n  PERFORMANCE_THRESHOLD_VIOLATION: 'performance:threshold:violation',\r\n\r\n  // 缓存相关事件\r\n  CACHE_HIT: 'cache:hit',\r\n  CACHE_MISS: 'cache:miss',\r\n  CACHE_EVICTED: 'cache:evicted',\r\n\r\n  // 安全相关事件\r\n  SECURITY_VIOLATION: 'security:violation',\r\n  SECURITY_BLOCKED: 'security:blocked',\r\n\r\n  // 配置相关事件\r\n  CONFIG_CHANGED: 'config:changed',\r\n  CONFIG_SAVED: 'config:saved',\r\n  CONFIG_LOADED: 'config:loaded',\r\n\r\n  // 生命周期事件\r\n  LIFECYCLE_BEFORE_INIT: 'lifecycle:before:init',\r\n  LIFECYCLE_AFTER_INIT: 'lifecycle:after:init',\r\n  LIFECYCLE_BEFORE_START: 'lifecycle:before:start',\r\n  LIFECYCLE_AFTER_START: 'lifecycle:after:start',\r\n  LIFECYCLE_BEFORE_STOP: 'lifecycle:before:stop',\r\n  LIFECYCLE_AFTER_STOP: 'lifecycle:after:stop',\r\n  LIFECYCLE_BEFORE_DESTROY: 'lifecycle:before:destroy',\r\n  LIFECYCLE_AFTER_DESTROY: 'lifecycle:after:destroy',\r\n} as const\r\n\r\n/**\r\n * 日志级别常量\r\n * 📝 定义日志系统的标准级别\r\n */\r\nexport const LOG_LEVELS = ['debug', 'info', 'warn', 'error'] as const\r\n\r\n/**\r\n * 通知类型常量\r\n * 🔔 定义通知系统的标准类型\r\n */\r\nexport const NOTIFICATION_TYPES = [\r\n  'success',\r\n  'error',\r\n  'warning',\r\n  'info',\r\n] as const\r\n\r\n/**\r\n * 通知位置常量\r\n * 📍 定义通知显示的标准位置\r\n */\r\nexport const NOTIFICATION_POSITIONS = [\r\n  'top-left',\r\n  'top-center',\r\n  'top-right',\r\n  'bottom-left',\r\n  'bottom-center',\r\n  'bottom-right',\r\n] as const\r\n\r\n/**\r\n * 通知动画常量\r\n * ✨ 定义通知显示的标准动画效果\r\n */\r\nexport const NOTIFICATION_ANIMATIONS = [\r\n  'slide',\r\n  'fade',\r\n  'bounce',\r\n  'scale',\r\n  'flip',\r\n] as const\r\n\r\n/**\r\n * 通知主题常量\r\n * 🎨 定义通知显示的标准主题\r\n */\r\nexport const NOTIFICATION_THEMES = ['light', 'dark', 'auto'] as const\r\n\r\n/**\r\n * 缓存策略常量\r\n * 💾 定义缓存系统的标准策略\r\n */\r\nexport const CACHE_STRATEGIES = ['lru', 'lfu', 'fifo', 'ttl'] as const\r\n\r\n/**\r\n * 环境类型常量\r\n * 🌍 定义系统支持的标准环境\r\n */\r\nexport const ENVIRONMENTS = ['development', 'production', 'test'] as const\r\n\r\n/**\r\n * 功能开关常量\r\n * 🎛️ 定义引擎功能的标准开关名称\r\n */\r\nexport const FEATURE_FLAGS = {\r\n  ENABLE_HOT_RELOAD: 'enableHotReload',\r\n  ENABLE_DEV_TOOLS: 'enableDevTools',\r\n  ENABLE_PERFORMANCE_MONITORING: 'enablePerformanceMonitoring',\r\n  ENABLE_ERROR_REPORTING: 'enableErrorReporting',\r\n  ENABLE_SECURITY_PROTECTION: 'enableSecurityProtection',\r\n  ENABLE_CACHING: 'enableCaching',\r\n  ENABLE_NOTIFICATIONS: 'enableNotifications',\r\n} as const\r\n\r\n/**\r\n * 性能阈值常量\r\n * ⚡ 定义性能监控的标准阈值\r\n */\r\nexport const PERFORMANCE_THRESHOLDS = {\r\n  RESPONSE_TIME: {\r\n    GOOD: 100, // 100ms\r\n    POOR: 1000, // 1s\r\n  },\r\n  FPS: {\r\n    GOOD: 60, // 60fps\r\n    POOR: 30, // 30fps\r\n  },\r\n  MEMORY: {\r\n    WARNING: 50, // 50MB\r\n    CRITICAL: 100, // 100MB\r\n  },\r\n} as const\r\n\r\n/**\r\n * 安全配置常量\r\n * 🔒 定义安全系统的标准配置\r\n */\r\nexport const SECURITY_CONFIG = {\r\n  XSS: {\r\n    ALLOWED_TAGS: ['b', 'i', 'em', 'strong', 'a', 'span', 'div', 'p'],\r\n    ALLOWED_ATTRIBUTES: {\r\n      a: ['href', 'title', 'target'],\r\n      img: ['src', 'alt', 'title'],\r\n    },\r\n  },\r\n  CSP: {\r\n    DIRECTIVES: {\r\n      'default-src': ['self'],\r\n      'script-src': ['self', 'unsafe-inline'],\r\n      'style-src': ['self', 'unsafe-inline'],\r\n      'img-src': ['self', 'data:', 'https:'],\r\n    },\r\n  },\r\n} as const\r\n\r\n/**\r\n * 存储键常量\r\n * 🔑 定义本地存储使用的标准键名\r\n */\r\nexport const STORAGE_KEYS = {\r\n  ENGINE_CONFIG: 'engine-config',\r\n  ENGINE_LOGS: 'engine-logs',\r\n  ENGINE_CACHE: 'engine-cache',\r\n  ENGINE_STATE: 'engine-state',\r\n  ENGINE_NOTIFICATIONS: 'engine-notifications',\r\n} as const\r\n\r\n/**\r\n * 错误代码常量\r\n * 🚨 定义系统错误的标准代码\r\n */\r\nexport const ERROR_CODES = {\r\n  // 配置相关错误\r\n  CONFIG_INVALID: 'CONFIG_INVALID',\r\n  CONFIG_MISSING: 'CONFIG_MISSING',\r\n  CONFIG_VALIDATION_FAILED: 'CONFIG_VALIDATION_FAILED',\r\n\r\n  // 插件相关错误\r\n  PLUGIN_INSTALL_FAILED: 'PLUGIN_INSTALL_FAILED',\r\n  PLUGIN_DEPENDENCY_MISSING: 'PLUGIN_DEPENDENCY_MISSING',\r\n  PLUGIN_CONFLICT: 'PLUGIN_CONFLICT',\r\n\r\n  // 中间件相关错误\r\n  MIDDLEWARE_EXECUTION_FAILED: 'MIDDLEWARE_EXECUTION_FAILED',\r\n  MIDDLEWARE_NOT_FOUND: 'MIDDLEWARE_NOT_FOUND',\r\n\r\n  // 状态相关错误\r\n  STATE_INVALID: 'STATE_INVALID',\r\n  STATE_ACCESS_DENIED: 'STATE_ACCESS_DENIED',\r\n\r\n  // 缓存相关错误\r\n  CACHE_FULL: 'CACHE_FULL',\r\n  CACHE_INVALID_KEY: 'CACHE_INVALID_KEY',\r\n\r\n  // 安全相关错误\r\n  SECURITY_VIOLATION: 'SECURITY_VIOLATION',\r\n  SECURITY_BLOCKED: 'SECURITY_BLOCKED',\r\n\r\n  // 性能相关错误\r\n  PERFORMANCE_THRESHOLD_EXCEEDED: 'PERFORMANCE_THRESHOLD_EXCEEDED',\r\n  PERFORMANCE_MONITORING_FAILED: 'PERFORMANCE_MONITORING_FAILED',\r\n} as const\r\n\r\n/**\r\n * 版本常量\r\n * 📦 定义引擎版本相关信息\r\n */\r\nexport const VERSION = {\r\n  CURRENT: '0.1.0',\r\n  MIN_SUPPORTED: '0.1.0',\r\n  API_VERSION: '1.0.0',\r\n} as const\r\n\r\n/**\r\n * 时间常量\r\n * ⏰ 定义系统中使用的标准时间值\r\n */\r\nexport const TIME = {\r\n  SECOND: 1000,\r\n  MINUTE: 60 * 1000,\r\n  HOUR: 60 * 60 * 1000,\r\n  DAY: 24 * 60 * 60 * 1000,\r\n\r\n  // 默认间隔\r\n  DEFAULT_AUTO_SAVE_INTERVAL: 30000, // 30秒\r\n  DEFAULT_CACHE_CLEANUP_INTERVAL: 60000, // 1分钟\r\n  DEFAULT_PERFORMANCE_CHECK_INTERVAL: 5000, // 5秒\r\n  DEFAULT_HEALTH_CHECK_INTERVAL: 30000, // 30秒\r\n} as const\r\n\r\n/**\r\n * 大小限制常量\r\n * 📏 定义系统中各种大小限制\r\n */\r\nexport const LIMITS = {\r\n  // 缓存限制\r\n  MAX_CACHE_SIZE: 1000,\r\n  MAX_CACHE_ENTRY_SIZE: 1024 * 1024, // 1MB\r\n\r\n  // 日志限制\r\n  MAX_LOG_ENTRIES: 10000,\r\n  MAX_LOG_ENTRY_SIZE: 1024, // 1KB\r\n\r\n  // 通知限制\r\n  MAX_NOTIFICATIONS: 100,\r\n  MAX_NOTIFICATION_DURATION: 10000, // 10秒\r\n\r\n  // 插件限制\r\n  MAX_PLUGINS: 100,\r\n  MAX_PLUGIN_DEPENDENCIES: 50,\r\n\r\n  // 中间件限制\r\n  MAX_MIDDLEWARE: 100,\r\n  MAX_MIDDLEWARE_PRIORITY: 1000,\r\n\r\n  // 状态限制\r\n  MAX_STATE_KEYS: 10000,\r\n  MAX_STATE_VALUE_SIZE: 1024 * 1024, // 1MB\r\n} as const\r\n"],"names":[],"mappings":"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"}