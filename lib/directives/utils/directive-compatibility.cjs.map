{"version":3,"file":"directive-compatibility.cjs","sources":["../../../src/directives/utils/directive-compatibility.ts"],"sourcesContent":["/**\n * 指令兼容性工具\n * 处理 Vue 指令和引擎指令之间的类型转换和兼容性检查\n */\n\nimport type { ObjectDirective } from 'vue'\nimport type {\n  DirectiveAdapterFactory,\n  DirectiveCompatibilityChecker,\n  DirectiveType,\n  EngineDirective,\n  VueDirectiveBinding,\n} from '../../types/directive'\n// import { getLogger } from '../../logger/logger' // 已移除日志\n\n// const logger = getLogger('directive-compatibility') // 已移除日志\n\n/**\n * 检查指令类型\n */\nexport function checkDirectiveType(directive: unknown): DirectiveType {\n  if (!directive) return 'engine'\n\n  // 检查是否是 Vue 指令\n  const obj = (typeof directive === 'object' && directive !== null) ? (directive as Record<string, unknown>) : undefined\n  const hasVueHooks = ['created', 'beforeMount', 'mounted', 'beforeUpdate', 'updated', 'beforeUnmount', 'unmounted']\n    .some(hook => !!obj && typeof obj[hook] === 'function' && (obj[hook] as (...args: unknown[]) => void).length >= 2)\n\n  // 检查是否是引擎指令\n  const hasEngineHooks = ['beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUpdate', 'updated', 'beforeUnmount', 'unmounted']\n    .some(hook => !!obj && typeof obj[hook] === 'function' && (obj[hook] as (...args: unknown[]) => void).length === 0)\n\n  if (hasVueHooks && hasEngineHooks) return 'hybrid'\n  if (hasVueHooks) return 'vue'\n  return 'engine'\n}\n\n/**\n * 检查是否是 Vue 指令\n */\nexport function isVueDirective(directive: unknown): boolean {\n  return checkDirectiveType(directive) === 'vue'\n}\n\n/**\n * 检查是否是引擎指令\n */\nexport function isEngineDirective(directive: unknown): boolean {\n  return checkDirectiveType(directive) === 'engine'\n}\n\n/**\n * 检查是否是混合指令\n */\nexport function isHybridDirective(directive: unknown): boolean {\n  return checkDirectiveType(directive) === 'hybrid'\n}\n\n/**\n * 将 Vue 指令转换为引擎指令\n */\nexport function convertVueToEngineDirective(vueDirective: unknown): EngineDirective {\n  const engineDirective: EngineDirective = {\n    name: 'converted-vue-directive',\n    description: 'Converted from Vue directive',\n    version: '1.0.0',\n  }\n\n  // 转换生命周期方法 - 检查是否是对象指令\n  if (typeof vueDirective === 'object' && vueDirective !== null) {\n    const d = vueDirective as Record<string, unknown>\n    if (typeof d.created === 'function') {\n      engineDirective.created = d.created as unknown as EngineDirective['created']\n    }\n    if (typeof d.beforeMount === 'function') {\n      engineDirective.beforeMount = d.beforeMount as unknown as EngineDirective['beforeMount']\n    }\n    if (typeof d.mounted === 'function') {\n      engineDirective.mounted = d.mounted as unknown as EngineDirective['mounted']\n    }\n    if (typeof d.beforeUpdate === 'function') {\n      engineDirective.beforeUpdate = d.beforeUpdate as unknown as EngineDirective['beforeUpdate']\n    }\n    if (typeof d.updated === 'function') {\n      engineDirective.updated = d.updated as unknown as EngineDirective['updated']\n    }\n    if (typeof d.beforeUnmount === 'function') {\n      engineDirective.beforeUnmount = d.beforeUnmount as unknown as EngineDirective['beforeUnmount']\n    }\n    if (typeof d.unmounted === 'function') {\n      engineDirective.unmounted = d.unmounted as unknown as EngineDirective['unmounted']\n    }\n  } else if (typeof vueDirective === 'function') {\n    // 如果是函数指令，转换为 mounted 钩子（保持 Vue 风格签名）\n    engineDirective.mounted = (el: HTMLElement, binding: VueDirectiveBinding) => {\n      ; (vueDirective as (el: HTMLElement, binding: VueDirectiveBinding) => void)(el, binding)\n    }\n  }\n\n  return engineDirective\n}\n\n/**\n * 将引擎指令转换为 Vue 指令\n */\nexport function convertEngineToVueDirective(engineDirective: EngineDirective): ObjectDirective {\n  const vueDirective: ObjectDirective = {} as ObjectDirective\n\n  // 转换生命周期方法\n  if (engineDirective.created) {\n    if (typeof engineDirective.created === 'function') {\n      // 如果是引擎风格的方法（无参数），包装为 Vue 风格\n      if (engineDirective.created.length === 0) {\n        vueDirective.created = (_el: HTMLElement, _binding: unknown) => {\n          ; (engineDirective.created as () => void)()\n        }\n      } else {\n        // 如果已经是 Vue 风格的方法，直接使用\n        vueDirective.created = engineDirective.created as unknown as ObjectDirective['created']\n      }\n    }\n  }\n\n  if (engineDirective.beforeMount) {\n    if (typeof engineDirective.beforeMount === 'function') {\n      if (engineDirective.beforeMount.length === 0) {\n        vueDirective.beforeMount = (_el: HTMLElement, _binding: unknown) => {\n          ; (engineDirective.beforeMount as () => void)()\n        }\n      } else {\n        vueDirective.beforeMount = engineDirective.beforeMount as unknown as ObjectDirective['beforeMount']\n      }\n    }\n  }\n\n  if (engineDirective.mounted) {\n    if (typeof engineDirective.mounted === 'function') {\n      if (engineDirective.mounted.length === 0) {\n        vueDirective.mounted = (_el: HTMLElement, _binding: unknown) => {\n          ; (engineDirective.mounted as () => void)()\n        }\n      } else {\n        vueDirective.mounted = engineDirective.mounted as unknown as ObjectDirective['mounted']\n      }\n    }\n  }\n\n  if (engineDirective.beforeUpdate) {\n    if (typeof engineDirective.beforeUpdate === 'function') {\n      if (engineDirective.beforeUpdate.length === 0) {\n        vueDirective.beforeUpdate = (_el: HTMLElement, _binding: unknown) => {\n          ; (engineDirective.beforeUpdate as () => void)()\n        }\n      } else {\n        vueDirective.beforeUpdate = engineDirective.beforeUpdate as unknown as ObjectDirective['beforeUpdate']\n      }\n    }\n  }\n\n  if (engineDirective.updated) {\n    if (typeof engineDirective.updated === 'function') {\n      if (engineDirective.updated.length === 0) {\n        vueDirective.updated = (_el: HTMLElement, _binding: unknown) => {\n          ; (engineDirective.updated as () => void)()\n        }\n      } else {\n        vueDirective.updated = engineDirective.updated as unknown as ObjectDirective['updated']\n      }\n    }\n  }\n\n  if (engineDirective.beforeUnmount) {\n    if (typeof engineDirective.beforeUnmount === 'function') {\n      if (engineDirective.beforeUnmount.length === 0) {\n        vueDirective.beforeUnmount = (_el: HTMLElement, _binding: unknown) => {\n          ; (engineDirective.beforeUnmount as () => void)()\n        }\n      } else {\n        vueDirective.beforeUnmount = engineDirective.beforeUnmount as unknown as ObjectDirective['beforeUnmount']\n      }\n    }\n  }\n\n  if (engineDirective.unmounted) {\n    if (typeof engineDirective.unmounted === 'function') {\n      if (engineDirective.unmounted.length === 0) {\n        vueDirective.unmounted = (_el: HTMLElement, _binding: unknown) => {\n          ; (engineDirective.unmounted as () => void)()\n        }\n      } else {\n        vueDirective.unmounted = engineDirective.unmounted as unknown as ObjectDirective['unmounted']\n      }\n    }\n  }\n\n  return vueDirective\n}\n\n/**\n * 创建混合指令适配器\n */\nexport function createHybridDirectiveAdapter(directive: unknown): EngineDirective {\n  const type = checkDirectiveType(directive)\n\n  switch (type) {\n    case 'vue':\n      return convertVueToEngineDirective(directive)\n    case 'engine':\n      return directive as EngineDirective\n    case 'hybrid':\n      return directive as EngineDirective\n    default:\n      return directive as EngineDirective\n  }\n}\n\n/**\n * 指令兼容性检查器实现\n */\nexport const directiveCompatibilityChecker: DirectiveCompatibilityChecker = {\n  checkType: checkDirectiveType,\n  isVueDirective,\n  isEngineDirective,\n  isHybridDirective,\n  convertToEngineDirective: convertVueToEngineDirective,\n  convertToVueDirective: convertEngineToVueDirective,\n}\n\n/**\n * 指令适配器工厂实现\n */\nexport const directiveAdapterFactory: DirectiveAdapterFactory = {\n  createVueAdapter: convertEngineToVueDirective,\n  createEngineAdapter: convertVueToEngineDirective,\n  createHybridAdapter: createHybridDirectiveAdapter,\n}\n\n/**\n * 安全的指令调用包装器\n */\nexport function safeDirectiveCall<T extends unknown[]>(\n  fn: ((...args: T) => void) | undefined,\n  args: T,\n  context?: string\n): void {\n  if (typeof fn === 'function') {\n    try {\n      fn(...args)\n    } catch (error) {\n      console.error(`Error in directive ${context || 'unknown'}:`, error)\n    }\n  }\n}\n\n/**\n * 指令方法签名检查器\n */\nexport function getMethodSignature(fn: unknown): 'vue' | 'engine' | 'unknown' {\n  if (typeof fn !== 'function') return 'unknown'\n\n  // Vue 指令方法通常有 2 个参数 (el, binding)\n  if (fn.length >= 2) return 'vue'\n\n  // 引擎指令方法通常没有参数\n  if (fn.length === 0) return 'engine'\n\n  return 'unknown'\n}\n"],"names":[],"mappings":"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"}