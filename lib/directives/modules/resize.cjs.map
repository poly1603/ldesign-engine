{"version":3,"file":"resize.cjs","sources":["../../../src/directives/modules/resize.ts"],"sourcesContent":["/**\r\n * 元素大小监听指令\r\n * 监听元素尺寸变化并触发回调\r\n */\r\n\r\nimport type { VueDirectiveBinding } from '../base/vue-directive-adapter'\r\nimport { DirectiveBase } from '../base/directive-base'\r\nimport { defineDirective, directiveUtils } from '../base/vue-directive-adapter'\r\n\r\nexport interface ResizeOptions {\r\n  callback?: (entry: ResizeObserverEntry) => void\r\n  debounce?: number\r\n  immediate?: boolean\r\n  disabled?: boolean\r\n}\r\n\r\nexport class ResizeDirective extends DirectiveBase {\r\n  constructor() {\r\n    super({\r\n      name: 'resize',\r\n      description: '监听元素尺寸变化',\r\n      version: '1.0.0',\r\n      category: 'interaction',\r\n      tags: ['resize', 'observer', 'dimension'],\r\n    })\r\n  }\r\n\r\n  public mounted(el: HTMLElement, binding: VueDirectiveBinding): void {\r\n    const config = this.parseConfig(binding)\r\n\r\n    if (config.disabled) {\r\n      return\r\n    }\r\n\r\n    const observer = this.createObserver(el, config)\r\n    directiveUtils.storeData(el, 'resize-observer', observer)\r\n    directiveUtils.storeData(el, 'resize-config', config)\r\n\r\n    observer.observe(el)\r\n    this.log('Resize observer attached', el)\r\n  }\r\n\r\n  public updated(el: HTMLElement, binding: VueDirectiveBinding): void {\r\n    const newConfig = this.parseConfig(binding)\r\n    const oldConfig = directiveUtils.getData(el, 'resize-config') as ResizeOptions\r\n\r\n    if (JSON.stringify(newConfig) === JSON.stringify(oldConfig)) {\r\n      return\r\n    }\r\n\r\n    this.unmounted(el)\r\n\r\n    if (!newConfig.disabled) {\r\n      this.mounted(el, binding)\r\n    }\r\n  }\r\n\r\n  public unmounted(el: HTMLElement): void {\r\n    const observer = directiveUtils.getData(el, 'resize-observer') as ResizeObserver\r\n    const timer = directiveUtils.getData(el, 'resize-timer') as number\r\n\r\n    // 清理定时器\r\n    if (timer) {\r\n      clearTimeout(timer)\r\n      directiveUtils.removeData(el, 'resize-timer')\r\n    }\r\n\r\n    // 断开并清理 ResizeObserver\r\n    if (observer) {\r\n      observer.unobserve(el) // 先取消观察\r\n      observer.disconnect()   // 再断开连接\r\n      directiveUtils.removeData(el, 'resize-observer')\r\n    }\r\n\r\n    // 清理配置数据\r\n    directiveUtils.removeData(el, 'resize-config')\r\n    \r\n    // 清理元素引用\r\n    if (el && typeof el === 'object') {\r\n      (el as any).__resizeObserver = null\r\n    }\r\n    \r\n    this.log('Resize observer detached', el)\r\n  }\r\n\r\n  private createObserver(el: HTMLElement, config: ResizeOptions): ResizeObserver {\r\n    let isFirstCall = true\r\n\r\n    const callback = (entries: ResizeObserverEntry[]): void => {\r\n      if (!config.immediate && isFirstCall) {\r\n        isFirstCall = false\r\n        return\r\n      }\r\n      isFirstCall = false\r\n\r\n      for (const entry of entries) {\r\n        if (config.debounce && config.debounce > 0) {\r\n          const timer = directiveUtils.getData(el, 'resize-timer') as number\r\n          if (timer) {\r\n            clearTimeout(timer)\r\n          }\r\n\r\n          const newTimer = window.setTimeout(() => {\r\n            config.callback?.(entry)\r\n            this.emitEvent(el, 'resize', {\r\n              width: entry.contentRect.width,\r\n              height: entry.contentRect.height,\r\n              entry,\r\n            })\r\n          }, config.debounce)\r\n\r\n          directiveUtils.storeData(el, 'resize-timer', newTimer)\r\n        } else {\r\n          config.callback?.(entry)\r\n          this.emitEvent(el, 'resize', {\r\n            width: entry.contentRect.width,\r\n            height: entry.contentRect.height,\r\n            entry,\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n    return new ResizeObserver(callback)\r\n  }\r\n\r\n  private parseConfig(binding: VueDirectiveBinding): ResizeOptions {\r\n    const value = binding.value\r\n\r\n    if (typeof value === 'function') {\r\n      return { callback: value as (entry: ResizeObserverEntry) => void }\r\n    }\r\n\r\n    if (typeof value === 'object' && value !== null) {\r\n      return value as ResizeOptions\r\n    }\r\n\r\n    return {}\r\n  }\r\n\r\n  private emitEvent(el: HTMLElement, eventName: string, detail: unknown): void {\r\n    el.dispatchEvent(\r\n      new CustomEvent(eventName, {\r\n        detail,\r\n        bubbles: true,\r\n        cancelable: true,\r\n      })\r\n    )\r\n  }\r\n\r\n  public getExample(): string {\r\n    return `\r\n<!-- Basic resize detection -->\r\n<div v-resize=\"onResize\" class=\"resizable\">\r\n  Resize me!\r\n</div>\r\n\r\n<!-- With debounce -->\r\n<div v-resize=\"{\r\n  callback: onResize,\r\n  debounce: 300\r\n}\" class=\"chart-container\">\r\n  Chart will re-render after resize\r\n</div>\r\n\r\n<!-- Immediate callback -->\r\n<div v-resize=\"{\r\n  callback: handleResize,\r\n  immediate: true\r\n}\">\r\n  Gets initial size immediately\r\n</div>\r\n\r\n<!-- Conditional monitoring -->\r\n<div v-resize=\"{\r\n  callback: onResize,\r\n  disabled: !isMonitoring\r\n}\">\r\n  Conditionally monitored element\r\n</div>\r\n\r\n<!-- Listen via event -->\r\n<div \r\n  v-resize=\"{}\"\r\n  @resize=\"onResizeEvent\"\r\n>\r\n  Listen to resize events\r\n</div>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\n\r\nconst isMonitoring = ref(true)\r\n\r\nconst onResize = (entry) => {\r\n  \r\n}\r\n\r\nconst handleResize = (entry) => {\r\n  const { width, height } = entry.contentRect\r\n  \r\n}\r\n\r\nconst onResizeEvent = (event) => {\r\n  \r\n}\r\n</script>\r\n\r\n<style>\r\n.resizable {\r\n  resize: both;\r\n  overflow: auto;\r\n  border: 1px solid #ccc;\r\n  padding: 20px;\r\n  min-width: 200px;\r\n  min-height: 100px;\r\n}\r\n\r\n.chart-container {\r\n  width: 100%;\r\n  height: 400px;\r\n}\r\n</style>\r\n    `\r\n  }\r\n}\r\n\r\n// Export the directive definition\r\nexport const vResize = defineDirective(new ResizeDirective())\r\n\r\n// Export default for convenience\r\nexport default vResize\r\n"],"names":["DirectiveBase","directiveUtils","defineDirective"],"mappings":"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"}