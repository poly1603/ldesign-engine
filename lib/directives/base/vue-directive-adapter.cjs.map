{"version":3,"file":"vue-directive-adapter.cjs","sources":["../../../src/directives/base/vue-directive-adapter.ts"],"sourcesContent":["/**\r\n * Vue指令适配器\r\n * 将引擎指令转换为Vue指令格式\r\n */\r\n\r\nimport type { Directive, DirectiveBinding } from 'vue'\r\nimport type { DirectiveBase } from './directive-base'\r\nimport { getLogger } from '../../logger/logger'\r\n\r\nconst logger = getLogger('vue-directive-adapter')\r\nexport interface VueDirectiveBinding {\r\n  value: unknown\r\n  oldValue: unknown\r\n  arg?: string\r\n  modifiers: Record<string, boolean>\r\n  instance: unknown\r\n  dir: Directive\r\n}\r\n\r\n// 创建兼容的绑定对象\r\nfunction createCompatibleBinding(\r\n  binding: DirectiveBinding<unknown, string, string>\r\n): VueDirectiveBinding {\r\n  return {\r\n    value: binding.value,\r\n    oldValue: binding.oldValue,\r\n    arg: binding.arg,\r\n    modifiers: binding.modifiers as Record<string, boolean>,\r\n    instance: binding.instance,\r\n    dir: binding.dir,\r\n  }\r\n}\r\n\r\n/**\r\n * 安全调用指令方法，支持两种签名\r\n */\r\nfunction safeCallDirectiveMethod(\r\n  method: unknown,\r\n  el: HTMLElement,\r\n  binding: VueDirectiveBinding,\r\n  methodName: string\r\n): void {\r\n  if (typeof method === 'function') {\r\n    try {\r\n      if (method.length === 0) {\r\n        // 引擎风格：无参数\r\n        method()\r\n      } else {\r\n        // Vue 风格：有参数\r\n        method(el, binding)\r\n      }\r\n    } catch (error) {\r\n      logger.error(`Error in directive method ${methodName}:`, error)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 安全调用生命周期方法\r\n */\r\nfunction safeCallLifecycleMethod(\r\n  method: unknown,\r\n  el: HTMLElement,\r\n  binding: VueDirectiveBinding,\r\n  methodName: string\r\n): void {\r\n  if (method) {\r\n    safeCallDirectiveMethod(method, el, binding, methodName)\r\n  }\r\n}\r\n\r\nexport interface VueDirectiveHooks {\r\n  created?: (el: HTMLElement, binding: VueDirectiveBinding) => void\r\n  beforeMount?: (el: HTMLElement, binding: VueDirectiveBinding) => void\r\n  mounted?: (el: HTMLElement, binding: VueDirectiveBinding) => void\r\n  beforeUpdate?: (el: HTMLElement, binding: VueDirectiveBinding) => void\r\n  updated?: (el: HTMLElement, binding: VueDirectiveBinding) => void\r\n  beforeUnmount?: (el: HTMLElement, binding: VueDirectiveBinding) => void\r\n  unmounted?: (el: HTMLElement, binding: VueDirectiveBinding) => void\r\n}\r\n\r\n/**\r\n * 将引擎指令转换为Vue指令\r\n */\r\nexport function createVueDirective(directive: DirectiveBase): Directive {\r\n  return {\r\n    created(el: HTMLElement, binding: DirectiveBinding<unknown, string, string>) {\r\n      try {\r\n        directive.lifecycle.beforeCreate?.()\r\n\r\n        // 创建兼容的绑定对象\r\n        const compatibleBinding = createCompatibleBinding(binding)\r\n\r\n        // 存储指令实例到元素上\r\n        if (!el._engineDirectives) {\r\n          el._engineDirectives = new Map()\r\n        }\r\n        el._engineDirectives.set(directive.name, directive)\r\n\r\n        // 调用生命周期方法\r\n        safeCallLifecycleMethod(directive.lifecycle.created, el, compatibleBinding, 'lifecycle.created')\r\n        safeCallLifecycleMethod(directive.created, el, compatibleBinding, 'created')\r\n      } catch (error) {\r\n        directive.lifecycle.error?.(error as Error)\r\n      }\r\n    },\r\n\r\n    beforeMount(\r\n      el: HTMLElement,\r\n      binding: DirectiveBinding<unknown, string, string>\r\n    ) {\r\n      try {\r\n        const compatibleBinding = createCompatibleBinding(binding)\r\n        safeCallLifecycleMethod(directive.lifecycle.beforeMount, el, compatibleBinding, 'lifecycle.beforeMount')\r\n        safeCallLifecycleMethod(directive.beforeMount, el, compatibleBinding, 'beforeMount')\r\n      } catch (error) {\r\n        directive.lifecycle.error?.(error as Error)\r\n      }\r\n    },\r\n\r\n    mounted(el: HTMLElement, binding: DirectiveBinding<unknown, string, string>) {\r\n      try {\r\n        const compatibleBinding = createCompatibleBinding(binding)\r\n        safeCallLifecycleMethod(directive.lifecycle.mounted, el, compatibleBinding, 'lifecycle.mounted')\r\n        safeCallLifecycleMethod(directive.mounted, el, compatibleBinding, 'mounted')\r\n      } catch (error) {\r\n        directive.lifecycle.error?.(error as Error)\r\n      }\r\n    },\r\n\r\n    beforeUpdate(\r\n      el: HTMLElement,\r\n      binding: DirectiveBinding<unknown, string, string>\r\n    ) {\r\n      try {\r\n        const compatibleBinding = createCompatibleBinding(binding)\r\n        safeCallLifecycleMethod(directive.lifecycle.beforeUpdate, el, compatibleBinding, 'lifecycle.beforeUpdate')\r\n        safeCallLifecycleMethod(directive.beforeUpdate, el, compatibleBinding, 'beforeUpdate')\r\n      } catch (error) {\r\n        directive.lifecycle.error?.(error as Error)\r\n      }\r\n    },\r\n\r\n    updated(el: HTMLElement, binding: DirectiveBinding<unknown, string, string>) {\r\n      try {\r\n        const compatibleBinding = createCompatibleBinding(binding)\r\n        safeCallLifecycleMethod(directive.lifecycle.updated, el, compatibleBinding, 'lifecycle.updated')\r\n        safeCallLifecycleMethod(directive.updated, el, compatibleBinding, 'updated')\r\n      } catch (error) {\r\n        directive.lifecycle.error?.(error as Error)\r\n      }\r\n    },\r\n\r\n    beforeUnmount(\r\n      el: HTMLElement,\r\n      binding: DirectiveBinding<unknown, string, string>\r\n    ) {\r\n      try {\r\n        const compatibleBinding = createCompatibleBinding(binding)\r\n        safeCallLifecycleMethod(directive.lifecycle.beforeUnmount, el, compatibleBinding, 'lifecycle.beforeUnmount')\r\n        safeCallLifecycleMethod(directive.beforeUnmount, el, compatibleBinding, 'beforeUnmount')\r\n      } catch (error) {\r\n        directive.lifecycle.error?.(error as Error)\r\n      }\r\n    },\r\n\r\n    unmounted(el: HTMLElement, binding: DirectiveBinding<unknown, string, string>) {\r\n      try {\r\n        const compatibleBinding = createCompatibleBinding(binding)\r\n        safeCallLifecycleMethod(directive.unmounted, el, compatibleBinding, 'unmounted')\r\n\r\n        // 清理指令实例\r\n        if (el._engineDirectives) {\r\n          el._engineDirectives.delete(directive.name)\r\n        }\r\n\r\n        safeCallLifecycleMethod(directive.lifecycle.unmounted, el, compatibleBinding, 'lifecycle.unmounted')\r\n      } catch (error) {\r\n        directive.lifecycle.error?.(error as Error)\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\n/**\r\n * 指令工厂函数 - 支持两种使用方式\r\n * 1. defineDirective(directiveBase) - 传入 DirectiveBase 实例\r\n * 2. defineDirective(name, hooks) - 传入名称和钩子对象\r\n */\r\nexport function defineDirective(\r\n  directiveOrName: DirectiveBase | string,\r\n  hooks?: VueDirectiveHooks & {\r\n    created?: (el: HTMLElement, binding: VueDirectiveBinding) => void\r\n    beforeMount?: (el: HTMLElement, binding: VueDirectiveBinding) => void\r\n    mounted?: (el: HTMLElement, binding: VueDirectiveBinding) => void\r\n    beforeUpdate?: (el: HTMLElement, binding: VueDirectiveBinding) => void\r\n    updated?: (el: HTMLElement, binding: VueDirectiveBinding) => void\r\n    beforeUnmount?: (el: HTMLElement, binding: VueDirectiveBinding) => void\r\n    unmounted?: (el: HTMLElement, binding: VueDirectiveBinding) => void\r\n  }\r\n): Directive {\r\n  // 如果传入的是 DirectiveBase 实例，使用 createVueDirective\r\n  if (typeof directiveOrName !== 'string') {\r\n    return createVueDirective(directiveOrName)\r\n  }\r\n\r\n  // 否则使用钩子对象\r\n  if (!hooks) {\r\n    throw new Error('Hooks are required when name is provided')\r\n  }\r\n\r\n  return {\r\n    created(el, binding) { hooks.created?.(el as HTMLElement, createCompatibleBinding(binding as DirectiveBinding<unknown, string, string>)) },\r\n    beforeMount(el, binding) { hooks.beforeMount?.(el as HTMLElement, createCompatibleBinding(binding as DirectiveBinding<unknown, string, string>)) },\r\n    mounted(el, binding) { hooks.mounted?.(el as HTMLElement, createCompatibleBinding(binding as DirectiveBinding<unknown, string, string>)) },\r\n    beforeUpdate(el, binding) { hooks.beforeUpdate?.(el as HTMLElement, createCompatibleBinding(binding as DirectiveBinding<unknown, string, string>)) },\r\n    updated(el, binding) { hooks.updated?.(el as HTMLElement, createCompatibleBinding(binding as DirectiveBinding<unknown, string, string>)) },\r\n    beforeUnmount(el, binding) { hooks.beforeUnmount?.(el as HTMLElement, createCompatibleBinding(binding as DirectiveBinding<unknown, string, string>)) },\r\n    unmounted(el, binding) { hooks.unmounted?.(el as HTMLElement, createCompatibleBinding(binding as DirectiveBinding<unknown, string, string>)) },\r\n  }\r\n}\r\n\r\n/**\r\n * 指令工具函数\r\n */\r\nexport const directiveUtils = {\r\n  /**\r\n   * 获取绑定值\r\n   */\r\n  getValue(binding: VueDirectiveBinding, defaultValue?: unknown): unknown {\r\n    return binding.value !== undefined ? binding.value : defaultValue\r\n  },\r\n\r\n  /**\r\n   * 获取修饰符\r\n   */\r\n  getModifiers(binding: VueDirectiveBinding): Record<string, boolean> {\r\n    return binding.modifiers || {}\r\n  },\r\n\r\n  /**\r\n   * 检查修饰符\r\n   */\r\n  hasModifier(binding: VueDirectiveBinding, modifier: string): boolean {\r\n    return Boolean(binding.modifiers?.[modifier])\r\n  },\r\n\r\n  /**\r\n   * 获取参数\r\n   */\r\n  getArg(binding: VueDirectiveBinding): string | undefined {\r\n    return binding.arg\r\n  },\r\n\r\n  /**\r\n   * 获取旧值\r\n   */\r\n  getOldValue(binding: VueDirectiveBinding): unknown {\r\n    return binding.oldValue\r\n  },\r\n\r\n  /**\r\n   * 检查值是否改变\r\n   */\r\n  isValueChanged(binding: VueDirectiveBinding): boolean {\r\n    return binding.value !== binding.oldValue\r\n  },\r\n\r\n  /**\r\n   * 解析配置对象\r\n   */\r\n  parseConfig(binding: VueDirectiveBinding): Record<string, unknown> {\r\n    const value = binding.value\r\n\r\n    if (typeof value === 'object' && value !== null) {\r\n      return { ...(value as Record<string, unknown>) }\r\n    }\r\n\r\n    return { value }\r\n  },\r\n\r\n  /**\r\n   * 创建事件处理器\r\n   */\r\n  createHandler(\r\n    callback: EventListener,\r\n    options?: {\r\n      debounce?: number\r\n      throttle?: number\r\n      once?: boolean\r\n    }\r\n  ): EventListener {\r\n    let handler: EventListener = callback\r\n\r\n    if (options?.debounce) {\r\n      handler = debounce(handler, options.debounce)\r\n    } else if (options?.throttle) {\r\n      handler = throttle(handler, options.throttle)\r\n    }\r\n\r\n    if (options?.once) {\r\n      const originalHandler = handler\r\n      handler = function (this: unknown, evt: Event) {\r\n        originalHandler.call(this, evt)\r\n        // 移除事件监听器的逻辑需要在调用处处理\r\n      }\r\n    }\r\n\r\n    return handler\r\n  },\r\n\r\n  /**\r\n   * 存储数据到元素\r\n   */\r\n  storeData(el: HTMLElement, key: string, value: unknown): void {\r\n    if (!el._directiveData) {\r\n      el._directiveData = new Map()\r\n    }\r\n    el._directiveData.set(key, value)\r\n  },\r\n\r\n  /**\r\n   * 从元素获取数据\r\n   */\r\n  getData(el: HTMLElement, key: string): unknown {\r\n    return el._directiveData?.get(key)\r\n  },\r\n\r\n  /**\r\n   * 从元素删除数据\r\n   */\r\n  removeData(el: HTMLElement, key: string): void {\r\n    el._directiveData?.delete(key)\r\n  },\r\n\r\n  /**\r\n   * 清空元素数据\r\n   */\r\n  clearData(el: HTMLElement): void {\r\n    el._directiveData?.clear()\r\n  },\r\n}\r\n\r\n// 防抖函数\r\nfunction debounce(func: EventListener, wait: number): EventListener {\r\n  let timeout: number | undefined\r\n\r\n  return function (this: unknown, evt: Event) {\r\n    const later = () => {\r\n      timeout = undefined\r\n      func.call(this, evt)\r\n    }\r\n\r\n    clearTimeout(timeout)\r\n    timeout = window.setTimeout(later, wait)\r\n  } as EventListener\r\n}\r\n\r\n// 节流函数\r\nfunction throttle(func: EventListener, wait: number): EventListener {\r\n  let lastTime = 0\r\n\r\n  return function (this: unknown, evt: Event) {\r\n    const now = Date.now()\r\n\r\n    if (now - lastTime >= wait) {\r\n      lastTime = now\r\n      func.call(this, evt)\r\n    }\r\n  } as EventListener\r\n}\r\n\r\n// 扩展HTMLElement类型\r\ndeclare global {\r\n  interface HTMLElement {\r\n    _engineDirectives?: Map<string, DirectiveBase>\r\n    _directiveData?: Map<string, unknown>\r\n  }\r\n}\r\n"],"names":["getLogger"],"mappings":"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"}