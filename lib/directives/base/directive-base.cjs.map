{"version":3,"file":"directive-base.cjs","sources":["../../../src/directives/base/directive-base.ts"],"sourcesContent":["/**\n * 指令基础类\n * 提供指令的基础功能和通用方法\n */\n\nimport type {\n  DirectiveConfig,\n  DirectiveLifecycle,\n  EngineDirective,\n} from '../../types'\n\nexport interface DirectiveOptions {\n  name: string\n  description?: string\n  version?: string\n  author?: string\n  category?: string\n  tags?: string[]\n  dependencies?: string[]\n  config?: Partial<DirectiveConfig>\n}\n\nexport abstract class DirectiveBase implements EngineDirective {\n  public readonly name: string\n  public readonly description?: string\n  public readonly version: string\n  public readonly author?: string\n  public readonly category?: string\n  public readonly tags?: string[]\n  public readonly dependencies?: string[]\n  public readonly config: DirectiveConfig\n  public readonly lifecycle: DirectiveLifecycle\n  public readonly metadata: Record<string, unknown>\n\n  constructor(options: DirectiveOptions) {\n    this.name = options.name\n    this.description = options.description\n    this.version = options.version || '1.0.0'\n    this.author = options.author\n    this.category = options.category || 'utility'\n    this.tags = options.tags || []\n    this.dependencies = options.dependencies || []\n    this.metadata = {}\n\n    // 默认配置\n    this.config = {\n      enabled: true,\n      priority: 0,\n      scope: 'global',\n      autoRegister: true,\n      hotReload: false,\n      validation: true,\n      logging: false,\n      ...options.config,\n    }\n\n    // 生命周期钩子\n    this.lifecycle = {\n      beforeCreate: this.beforeCreate.bind(this),\n      created: this.created.bind(this),\n      beforeMount: this.beforeMount.bind(this),\n      mounted: this.mounted.bind(this),\n      beforeUpdate: this.beforeUpdate.bind(this),\n      updated: this.updated.bind(this),\n      beforeUnmount: this.beforeUnmount.bind(this),\n      unmounted: this.unmounted.bind(this),\n      error: this.error.bind(this),\n    }\n  }\n\n  // 生命周期钩子方法（子类可重写）\n  beforeCreate(): void {\n    // 指令创建前\n  }\n\n  created(_el?: HTMLElement, _binding?: unknown): void {\n    // 指令创建后\n  }\n\n  beforeMount(_el?: HTMLElement, _binding?: unknown): void {\n    // 指令挂载前\n  }\n\n  mounted(_el?: HTMLElement, _binding?: unknown): void {\n    // 指令挂载后\n  }\n\n  beforeUpdate(_el?: HTMLElement, _binding?: unknown): void {\n    // 指令更新前\n  }\n\n  updated(_el?: HTMLElement, _binding?: unknown): void {\n    // 指令更新后\n  }\n\n  beforeUnmount(_el?: HTMLElement, _binding?: unknown): void {\n    // 指令卸载前\n  }\n\n  unmounted(_el?: HTMLElement): void {\n    // 指令卸载后\n  }\n\n  error(error: Error): void {\n    // 错误处理\n    console.error(`Directive ${this.name} error:`, error)\n  }\n\n  // 工具方法\n  protected log(_message: string, ..._args: unknown[]): void {\n    // 移除日志功能以减少包体积\n  }\n\n  protected warn(_message: string, ..._args: unknown[]): void {\n    // 移除日志功能以减少包体积\n  }\n\n  protected error_log(_message: string, ..._args: unknown[]): void {\n    // 移除日志功能以减少包体积\n  }\n\n  // 验证方法\n  protected validateElement(el: HTMLElement): boolean {\n    return el instanceof HTMLElement\n  }\n\n  protected validateBinding(binding: unknown): boolean {\n    return binding !== null && binding !== undefined\n  }\n\n  // 事件处理工具\n  protected addEventListener(\n    el: HTMLElement,\n    event: string,\n    handler: EventListener,\n    options?: AddEventListenerOptions\n  ): void {\n    el.addEventListener(event, handler, options)\n\n    // 存储事件处理器以便清理\n    if (!el._directiveHandlers) {\n      el._directiveHandlers = new Map()\n    }\n\n    const key = `${this.name}_${event}`\n    if (el._directiveHandlers.has(key)) {\n      const handler = el._directiveHandlers.get(key)\n      if (handler) {\n        el.removeEventListener(event, handler)\n      }\n    }\n\n    el._directiveHandlers.set(key, handler)\n  }\n\n  protected removeEventListener(el: HTMLElement, event: string): void {\n    if (el._directiveHandlers) {\n      const key = `${this.name}_${event}`\n      const handler = el._directiveHandlers.get(key)\n      if (handler) {\n        el.removeEventListener(event, handler)\n        el._directiveHandlers.delete(key)\n      }\n    }\n  }\n\n  protected removeAllEventListeners(el: HTMLElement): void {\n    if (el._directiveHandlers) {\n      for (const [key, handler] of el._directiveHandlers.entries()) {\n        if (key.startsWith(`${this.name}_`)) {\n          const event = key.replace(`${this.name}_`, '')\n          el.removeEventListener(event, handler)\n          el._directiveHandlers.delete(key)\n        }\n      }\n    }\n  }\n\n  // 样式工具\n  protected addClass(el: HTMLElement, className: string): void {\n    el.classList.add(className)\n  }\n\n  protected removeClass(el: HTMLElement, className: string): void {\n    el.classList.remove(className)\n  }\n\n  protected toggleClass(el: HTMLElement, className: string): void {\n    el.classList.toggle(className)\n  }\n\n  protected hasClass(el: HTMLElement, className: string): boolean {\n    return el.classList.contains(className)\n  }\n\n  // 属性工具\n  protected setAttribute(el: HTMLElement, name: string, value: string): void {\n    el.setAttribute(name, value)\n  }\n\n  protected removeAttribute(el: HTMLElement, name: string): void {\n    el.removeAttribute(name)\n  }\n\n  protected getAttribute(el: HTMLElement, name: string): string | null {\n    return el.getAttribute(name)\n  }\n\n  protected hasAttribute(el: HTMLElement, name: string): boolean {\n    return el.hasAttribute(name)\n  }\n}\n\n// 扩展HTMLElement类型以支持指令处理器存储\ndeclare global {\n  interface HTMLElement {\n    _directiveHandlers?: Map<string, EventListener>\n  }\n}\n"],"names":["handler"],"mappings":";;;;;;;;;;;MAsBsB,aAAA,CAAa;AAAA,EAYjC,YAAY,OAAA,EAAyB;AACnC,IAAA,IAAA,CAAK,OAAO,OAAA,CAAQ,IAAA;AACpB,IAAA,IAAA,CAAK,cAAc,OAAA,CAAQ,WAAA;AAC3B,IAAA,IAAA,CAAK,OAAA,GAAU,QAAQ,OAAA,IAAW,OAAA;AAClC,IAAA,IAAA,CAAK,SAAS,OAAA,CAAQ,MAAA;AACtB,IAAA,IAAA,CAAK,QAAA,GAAW,QAAQ,QAAA,IAAY,SAAA;AACpC,IAAA,IAAA,CAAK,IAAA,GAAO,OAAA,CAAQ,IAAA,IAAQ;AAC5B,IAAA,IAAA,CAAK,YAAA,GAAe,OAAA,CAAQ,YAAA,IAAgB;AAC5C,IAAA,IAAA,CAAK,WAAW,EAAA;AAGhB,IAAA,IAAA,CAAK,MAAA,GAAS;AAAA,MACZ,OAAA,EAAS,IAAA;AAAA,MACT,QAAA,EAAU,CAAA;AAAA,MACV,KAAA,EAAO,QAAA;AAAA,MACP,YAAA,EAAc,IAAA;AAAA,MACd,SAAA,EAAW,KAAA;AAAA,MACX,UAAA,EAAY,IAAA;AAAA,MACZ,OAAA,EAAS,KAAA;AAAA,MACT,GAAG,OAAA,CAAQ;AAAA;AAIb,IAAA,IAAA,CAAK,SAAA,GAAY;AAAA,MACf,YAAA,EAAc,IAAA,CAAK,YAAA,CAAa,IAAA,CAAK,IAAI,CAAA;AAAA,MACzC,OAAA,EAAS,IAAA,CAAK,OAAA,CAAQ,IAAA,CAAK,IAAI,CAAA;AAAA,MAC/B,WAAA,EAAa,IAAA,CAAK,WAAA,CAAY,IAAA,CAAK,IAAI,CAAA;AAAA,MACvC,OAAA,EAAS,IAAA,CAAK,OAAA,CAAQ,IAAA,CAAK,IAAI,CAAA;AAAA,MAC/B,YAAA,EAAc,IAAA,CAAK,YAAA,CAAa,IAAA,CAAK,IAAI,CAAA;AAAA,MACzC,OAAA,EAAS,IAAA,CAAK,OAAA,CAAQ,IAAA,CAAK,IAAI,CAAA;AAAA,MAC/B,aAAA,EAAe,IAAA,CAAK,aAAA,CAAc,IAAA,CAAK,IAAI,CAAA;AAAA,MAC3C,SAAA,EAAW,IAAA,CAAK,SAAA,CAAU,IAAA,CAAK,IAAI,CAAA;AAAA,MACnC,KAAA,EAAO,IAAA,CAAK,KAAA,CAAM,IAAA,CAAK,IAAI;AAAA;EAE/B;AAAA;AAAA,EAGA,YAAA,GAAY;AAAA,EAEZ;AAAA,EAEA,OAAA,CAAQ,KAAmB,QAAA,EAAkB;AAAA,EAE7C;AAAA,EAEA,WAAA,CAAY,KAAmB,QAAA,EAAkB;AAAA,EAEjD;AAAA,EAEA,OAAA,CAAQ,KAAmB,QAAA,EAAkB;AAAA,EAE7C;AAAA,EAEA,YAAA,CAAa,KAAmB,QAAA,EAAkB;AAAA,EAElD;AAAA,EAEA,OAAA,CAAQ,KAAmB,QAAA,EAAkB;AAAA,EAE7C;AAAA,EAEA,aAAA,CAAc,KAAmB,QAAA,EAAkB;AAAA,EAEnD;AAAA,EAEA,UAAU,GAAA,EAAiB;AAAA,EAE3B;AAAA,EAEA,MAAM,KAAA,EAAY;AAEhB,IAAA,OAAA,CAAQ,KAAA,CAAM,CAAA,UAAA,EAAa,IAAA,CAAK,IAAI,WAAW,KAAK,CAAA;AAAA,EACtD;AAAA;AAAA,EAGU,GAAA,CAAI,aAAqB,KAAA,EAAgB;AAAA,EAEnD;AAAA,EAEU,IAAA,CAAK,aAAqB,KAAA,EAAgB;AAAA,EAEpD;AAAA,EAEU,SAAA,CAAU,aAAqB,KAAA,EAAgB;AAAA,EAEzD;AAAA;AAAA,EAGU,gBAAgB,EAAA,EAAe;AACvC,IAAA,OAAO,EAAA,YAAc,WAAA;AAAA,EACvB;AAAA,EAEU,gBAAgB,OAAA,EAAgB;AACxC,IAAA,OAAO,OAAA,KAAY,QAAQ,OAAA,KAAY,MAAA;AAAA,EACzC;AAAA;AAAA,EAGU,gBAAA,CACR,EAAA,EACA,KAAA,EACA,OAAA,EACA,OAAA,EAAiC;AAEjC,IAAA,EAAA,CAAG,gBAAA,CAAiB,KAAA,EAAO,OAAA,EAAS,OAAO,CAAA;AAG3C,IAAA,IAAI,CAAC,GAAG,kBAAA,EAAoB;AAC1B,MAAA,EAAA,CAAG,kBAAA,uBAAyB,GAAA;IAC9B;AAEA,IAAA,MAAM,GAAA,GAAM,CAAA,EAAG,IAAA,CAAK,IAAI,IAAI,KAAK,CAAA,CAAA;AACjC,IAAA,IAAI,EAAA,CAAG,kBAAA,CAAmB,GAAA,CAAI,GAAG,CAAA,EAAG;AAClC,MAAA,MAAMA,QAAAA,GAAU,EAAA,CAAG,kBAAA,CAAmB,GAAA,CAAI,GAAG,CAAA;AAC7C,MAAA,IAAIA,QAAAA,EAAS;AACX,QAAA,EAAA,CAAG,mBAAA,CAAoB,OAAOA,QAAO,CAAA;AAAA,MACvC;AAAA,IACF;AAEA,IAAA,EAAA,CAAG,kBAAA,CAAmB,GAAA,CAAI,GAAA,EAAK,OAAO,CAAA;AAAA,EACxC;AAAA,EAEU,mBAAA,CAAoB,IAAiB,KAAA,EAAa;AAC1D,IAAA,IAAI,GAAG,kBAAA,EAAoB;AACzB,MAAA,MAAM,GAAA,GAAM,CAAA,EAAG,IAAA,CAAK,IAAI,IAAI,KAAK,CAAA,CAAA;AACjC,MAAA,MAAM,OAAA,GAAU,EAAA,CAAG,kBAAA,CAAmB,GAAA,CAAI,GAAG,CAAA;AAC7C,MAAA,IAAI,OAAA,EAAS;AACX,QAAA,EAAA,CAAG,mBAAA,CAAoB,OAAO,OAAO,CAAA;AACrC,QAAA,EAAA,CAAG,kBAAA,CAAmB,OAAO,GAAG,CAAA;AAAA,MAClC;AAAA,IACF;AAAA,EACF;AAAA,EAEU,wBAAwB,EAAA,EAAe;AAC/C,IAAA,IAAI,GAAG,kBAAA,EAAoB;AACzB,MAAA,KAAA,MAAW,CAAC,GAAA,EAAK,OAAO,KAAK,EAAA,CAAG,kBAAA,CAAmB,SAAO,EAAI;AAC5D,QAAA,IAAI,IAAI,UAAA,CAAW,CAAA,EAAG,IAAA,CAAK,IAAI,GAAG,CAAA,EAAG;AACnC,UAAA,MAAM,QAAQ,GAAA,CAAI,OAAA,CAAQ,GAAG,IAAA,CAAK,IAAI,KAAK,EAAE,CAAA;AAC7C,UAAA,EAAA,CAAG,mBAAA,CAAoB,OAAO,OAAO,CAAA;AACrC,UAAA,EAAA,CAAG,kBAAA,CAAmB,OAAO,GAAG,CAAA;AAAA,QAClC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAGU,QAAA,CAAS,IAAiB,SAAA,EAAiB;AACnD,IAAA,EAAA,CAAG,SAAA,CAAU,IAAI,SAAS,CAAA;AAAA,EAC5B;AAAA,EAEU,WAAA,CAAY,IAAiB,SAAA,EAAiB;AACtD,IAAA,EAAA,CAAG,SAAA,CAAU,OAAO,SAAS,CAAA;AAAA,EAC/B;AAAA,EAEU,WAAA,CAAY,IAAiB,SAAA,EAAiB;AACtD,IAAA,EAAA,CAAG,SAAA,CAAU,OAAO,SAAS,CAAA;AAAA,EAC/B;AAAA,EAEU,QAAA,CAAS,IAAiB,SAAA,EAAiB;AACnD,IAAA,OAAO,EAAA,CAAG,SAAA,CAAU,QAAA,CAAS,SAAS,CAAA;AAAA,EACxC;AAAA;AAAA,EAGU,YAAA,CAAa,EAAA,EAAiB,IAAA,EAAc,KAAA,EAAa;AACjE,IAAA,EAAA,CAAG,YAAA,CAAa,MAAM,KAAK,CAAA;AAAA,EAC7B;AAAA,EAEU,eAAA,CAAgB,IAAiB,IAAA,EAAY;AACrD,IAAA,EAAA,CAAG,gBAAgB,IAAI,CAAA;AAAA,EACzB;AAAA,EAEU,YAAA,CAAa,IAAiB,IAAA,EAAY;AAClD,IAAA,OAAO,EAAA,CAAG,aAAa,IAAI,CAAA;AAAA,EAC7B;AAAA,EAEU,YAAA,CAAa,IAAiB,IAAA,EAAY;AAClD,IAAA,OAAO,EAAA,CAAG,aAAa,IAAI,CAAA;AAAA,EAC7B;AACD;;;;"}