{"version":3,"file":"lazy.js","sources":["../../../src/directives/modules/lazy.ts"],"sourcesContent":["/**\r\n * 懒加载指令\r\n * 当元素进入视口时触发加载\r\n */\r\n\r\nimport type { VueDirectiveBinding } from '../base/vue-directive-adapter'\r\nimport { DirectiveBase } from '../base/directive-base'\r\nimport { defineDirective, directiveUtils } from '../base/vue-directive-adapter'\r\n\r\nexport interface LazyOptions {\r\n  callback?: (el: HTMLElement, entry: IntersectionObserverEntry) => void\r\n  src?: string\r\n  placeholder?: string\r\n  error?: string\r\n  loading?: string\r\n  threshold?: number | number[]\r\n  rootMargin?: string\r\n  root?: Element | null\r\n  once?: boolean\r\n  onLoad?: (el: HTMLElement) => void\r\n  onError?: (el: HTMLElement, error: Error) => void\r\n  onEnter?: (el: HTMLElement, entry: IntersectionObserverEntry) => void\r\n  loadingClass?: string\r\n  loadedClass?: string\r\n  errorClass?: string\r\n}\r\n\r\nexport class LazyDirective extends DirectiveBase {\r\n  private observers: Map<Element, IntersectionObserver> = new Map()\r\n  private defaultPlaceholder = 'data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\"%3E%3Crect width=\"100\" height=\"100\" fill=\"%23f0f0f0\"/%3E%3C/svg%3E'\r\n  private defaultError = 'data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\"%3E%3Crect width=\"100\" height=\"100\" fill=\"%23ff0000\"/%3E%3C/svg%3E'\r\n\r\n  constructor() {\r\n    super({\r\n      name: 'lazy',\r\n      description: '懒加载元素，当进入视口时才加载',\r\n      version: '1.0.0',\r\n      category: 'performance',\r\n      tags: ['lazy', 'load', 'performance', 'image'],\r\n    })\r\n  }\r\n\r\n  public mounted(el: HTMLElement, binding: VueDirectiveBinding): void {\r\n    const config = this.parseConfig(binding)\r\n\r\n    // Setup element\r\n    this.setupElement(el, config)\r\n\r\n    // Create intersection observer\r\n    const observerOptions: IntersectionObserverInit = {\r\n      threshold: config.threshold ?? 0,\r\n      rootMargin: config.rootMargin ?? '0px',\r\n      root: config.root ?? null,\r\n    }\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n          this.loadElement(el, config, entry)\r\n\r\n          if (config.once !== false) {\r\n            observer.unobserve(el)\r\n            this.observers.delete(el)\r\n          }\r\n        }\r\n      })\r\n    }, observerOptions)\r\n\r\n    observer.observe(el)\r\n    this.observers.set(el, observer)\r\n\r\n    this.log(`Lazy loading directive mounted on element`, el)\r\n  }\r\n\r\n  public updated(el: HTMLElement, binding: VueDirectiveBinding): void {\r\n    // Clean up old observer\r\n    const oldObserver = this.observers.get(el)\r\n    if (oldObserver) {\r\n      oldObserver.disconnect()\r\n      this.observers.delete(el)\r\n    }\r\n\r\n    // Re-mount with new config\r\n    this.mounted(el, binding)\r\n\r\n    this.log(`Lazy loading directive updated on element`, el)\r\n  }\r\n\r\n  public unmounted(el: HTMLElement): void {\r\n    const observer = this.observers.get(el)\r\n    if (observer) {\r\n      observer.disconnect()\r\n      this.observers.delete(el)\r\n    }\r\n\r\n    // Clean up stored data\r\n    directiveUtils.removeData(el, 'lazy-loaded')\r\n    directiveUtils.removeData(el, 'lazy-loading')\r\n    directiveUtils.removeData(el, 'lazy-error')\r\n\r\n    this.log(`Lazy loading directive unmounted from element`, el)\r\n  }\r\n\r\n  private setupElement(el: HTMLElement, config: LazyOptions): void {\r\n    const isImage = el.tagName === 'IMG'\r\n\r\n    if (isImage && config.placeholder) {\r\n      (el as HTMLImageElement).src = config.placeholder\r\n    } else if (isImage && config.loading) {\r\n      (el as HTMLImageElement).src = config.loading\r\n    } else if (isImage) {\r\n      (el as HTMLImageElement).src = this.defaultPlaceholder\r\n    }\r\n\r\n    if (config.loadingClass) {\r\n      el.classList.add(config.loadingClass)\r\n    }\r\n\r\n    directiveUtils.storeData(el, 'lazy-loading', true)\r\n  }\r\n\r\n  private loadElement(el: HTMLElement, config: LazyOptions, entry: IntersectionObserverEntry): void {\r\n    const isLoaded = directiveUtils.getData(el, 'lazy-loaded')\r\n    if (isLoaded) return\r\n\r\n    // Call onEnter callback\r\n    if (config.onEnter) {\r\n      config.onEnter(el, entry)\r\n    }\r\n\r\n    // Handle callback\r\n    if (config.callback) {\r\n      config.callback(el, entry)\r\n      directiveUtils.storeData(el, 'lazy-loaded', true)\r\n      this.updateClasses(el, config, 'loaded')\r\n      return\r\n    }\r\n\r\n    // Handle image loading\r\n    if (el.tagName === 'IMG' && config.src) {\r\n      this.loadImage(el as HTMLImageElement, config)\r\n    } else {\r\n      // For non-image elements, just mark as loaded\r\n      directiveUtils.storeData(el, 'lazy-loaded', true)\r\n      this.updateClasses(el, config, 'loaded')\r\n\r\n      if (config.onLoad) {\r\n        config.onLoad(el)\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadImage(img: HTMLImageElement, config: LazyOptions): void {\r\n    if (!config.src) return\r\n\r\n    const tempImg = new Image()\r\n\r\n    tempImg.onload = () => {\r\n      if (config.src) {\r\n        img.src = config.src\r\n      }\r\n      directiveUtils.storeData(img, 'lazy-loaded', true)\r\n      directiveUtils.removeData(img, 'lazy-loading')\r\n      this.updateClasses(img, config, 'loaded')\r\n\r\n      if (config.onLoad) {\r\n        config.onLoad(img)\r\n      }\r\n\r\n      this.log(`Image loaded successfully: ${config.src}`)\r\n    }\r\n\r\n    tempImg.onerror = (_event) => {\r\n      const error = new Error(`Failed to load image: ${config.src}`)\r\n\r\n      if (config.error) {\r\n        img.src = config.error\r\n      } else {\r\n        img.src = this.defaultError\r\n      }\r\n\r\n      directiveUtils.storeData(img, 'lazy-error', true)\r\n      directiveUtils.removeData(img, 'lazy-loading')\r\n      this.updateClasses(img, config, 'error')\r\n\r\n      if (config.onError) {\r\n        config.onError(img, error)\r\n      }\r\n\r\n      this.warn(`Failed to load image: ${config.src}`)\r\n    }\r\n\r\n    if (config.src) {\r\n      tempImg.src = config.src\r\n    }\r\n  }\r\n\r\n  private updateClasses(el: HTMLElement, config: LazyOptions, state: 'loading' | 'loaded' | 'error'): void {\r\n    // Remove all state classes\r\n    if (config.loadingClass) el.classList.remove(config.loadingClass)\r\n    if (config.loadedClass) el.classList.remove(config.loadedClass)\r\n    if (config.errorClass) el.classList.remove(config.errorClass)\r\n\r\n    // Add current state class\r\n    switch (state) {\r\n      case 'loading':\r\n        if (config.loadingClass) el.classList.add(config.loadingClass)\r\n        break\r\n      case 'loaded':\r\n        if (config.loadedClass) el.classList.add(config.loadedClass)\r\n        break\r\n      case 'error':\r\n        if (config.errorClass) el.classList.add(config.errorClass)\r\n        break\r\n    }\r\n  }\r\n\r\n  private parseConfig(binding: VueDirectiveBinding): LazyOptions {\r\n    const value = binding.value\r\n\r\n    // Handle string as src\r\n    if (typeof value === 'string') {\r\n      return { src: value }\r\n    }\r\n\r\n    // Handle object config\r\n    if (typeof value === 'object' && value !== null) {\r\n      return value as LazyOptions\r\n    }\r\n\r\n    // Handle function as callback\r\n    if (typeof value === 'function') {\r\n      return { callback: value as (el: HTMLElement, entry: IntersectionObserverEntry) => void }\r\n    }\r\n\r\n    return {}\r\n  }\r\n\r\n  public getExample(): string {\r\n    return `\r\n<!-- Basic image lazy loading -->\r\n<img v-lazy=\"'/path/to/image.jpg'\" alt=\"Lazy loaded image\">\r\n\r\n<!-- With placeholder and error image -->\r\n<img v-lazy=\"{\r\n  src: '/path/to/image.jpg',\r\n  placeholder: '/path/to/placeholder.jpg',\r\n  error: '/path/to/error.jpg',\r\n  threshold: 0.5,\r\n  rootMargin: '50px'\r\n}\" alt=\"Lazy image with options\">\r\n\r\n<!-- With callbacks -->\r\n<img v-lazy=\"{\r\n  src: '/path/to/image.jpg',\r\n  onLoad: (el) => ,\r\n  onError: (el, error) => console.error('Failed!', error),\r\n  loadingClass: 'loading',\r\n  loadedClass: 'loaded',\r\n  errorClass: 'error'\r\n}\" alt=\"Lazy image with callbacks\">\r\n\r\n<!-- Custom element with callback -->\r\n<div v-lazy=\"{\r\n  callback: (el, entry) => {\r\n    // Custom lazy loading logic\r\n    el.innerHTML = 'Content loaded!'\r\n  },\r\n  threshold: 1.0,\r\n  once: true\r\n}\">\r\n  Loading...\r\n</div>\r\n\r\n<style>\r\n.loading { opacity: 0.5; }\r\n.loaded { animation: fadeIn 0.3s; }\r\n.error { border: 2px solid red; }\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n}\r\n</style>\r\n    `\r\n  }\r\n}\r\n\r\n// Export the directive definition\r\nexport const vLazy = defineDirective(new LazyDirective())\r\n\r\n// Export default for convenience\r\nexport default vLazy\r\n"],"names":[],"mappings":"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"}