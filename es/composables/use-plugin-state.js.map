{"version":3,"file":"use-plugin-state.js","sources":["../../src/composables/use-plugin-state.ts"],"sourcesContent":["/**\r\n * 通用的插件状态管理组合式函数\r\n * 提供统一的状态共享机制\r\n */\r\n\r\nimport { inject, type InjectionKey, provide, ref, type Ref } from 'vue'\r\n\r\n/**\r\n * 通用的插件状态钩子\r\n * 尝试注入共享状态，如果不存在则创建新的\r\n * \r\n * @param key - 注入键，建议使用字符串以便跨应用共享\r\n * @param defaultValue - 默认值\r\n * @returns 响应式状态引用\r\n */\r\nexport function usePluginState<T>(\r\n  key: string | InjectionKey<Ref<T>>,\r\n  defaultValue: T\r\n): Ref<T> {\r\n  // 尝试注入已存在的共享状态\r\n  const injected = inject<Ref<T> | undefined>(key)\r\n  \r\n  if (injected) {\r\n    // 使用已存在的共享状态\r\n    return injected\r\n  }\r\n  \r\n  // 创建新的状态并提供给子组件\r\n  const state = ref(defaultValue) as Ref<T>\r\n  provide(key, state)\r\n  \r\n  return state\r\n}\r\n\r\n/**\r\n * 常用状态的便捷钩子\r\n */\r\n\r\n/**\r\n * 使用共享的 locale 状态\r\n */\r\nexport function useLocale(defaultValue = 'zh-CN'): Ref<string> {\r\n  return usePluginState('locale', defaultValue)\r\n}\r\n\r\n/**\r\n * 使用共享的主题状态\r\n */\r\nexport function useTheme(defaultValue = 'blue'): Ref<string> {\r\n  return usePluginState('theme', defaultValue)\r\n}\r\n\r\n/**\r\n * 使用共享的尺寸状态\r\n */\r\nexport function useSize(defaultValue = 'medium'): Ref<string> {\r\n  return usePluginState('size', defaultValue)\r\n}\r\n\r\n/**\r\n * 使用共享的暗黑模式状态\r\n */\r\nexport function useDark(defaultValue = false): Ref<boolean> {\r\n  return usePluginState('dark', defaultValue)\r\n}\r\n\r\n/**\r\n * 创建自定义的共享状态钩子\r\n * \r\n * @example\r\n * ```ts\r\n * // 创建自定义状态钩子\r\n * const useUserPreference = createSharedState('user-preference', {\r\n *   language: 'zh-CN',\r\n *   timezone: 'Asia/Shanghai'\r\n * })\r\n * \r\n * // 在组件中使用\r\n * const preference = useUserPreference()\r\n * ```\r\n */\r\nexport function createSharedState<T>(key: string, defaultValue: T) {\r\n  return () => usePluginState(key, defaultValue)\r\n}\r\n\r\n/**\r\n * 批量获取多个共享状态\r\n * \r\n * @example\r\n * ```ts\r\n * const { locale, theme, size } = usePluginStates({\r\n *   locale: 'zh-CN',\r\n *   theme: 'blue',\r\n *   size: 'medium'\r\n * })\r\n * ```\r\n */\r\nexport function usePluginStates<T extends Record<string, any>>(\r\n  states: T\r\n): { [K in keyof T]: Ref<T[K]> } {\r\n  const result = {} as { [K in keyof T]: Ref<T[K]> }\r\n  \r\n  for (const key in states) {\r\n    result[key] = usePluginState(key, states[key])\r\n  }\r\n  \r\n  return result\r\n}"],"names":[],"mappings":";;;;;;;;;;;AAeM,SAAU,cAAA,CACd,KACA,YAAA,EAAe;AAGf,EAAA,MAAM,QAAA,GAAW,OAA2B,GAAG,CAAA;AAE/C,EAAA,IAAI,QAAA,EAAU;AAEZ,IAAA,OAAO,QAAA;AAAA,EACT;AAGA,EAAA,MAAM,KAAA,GAAQ,IAAI,YAAY,CAAA;AAC9B,EAAA,OAAA,CAAQ,KAAK,KAAK,CAAA;AAElB,EAAA,OAAO,KAAA;AACT;AASM,SAAU,SAAA,CAAU,eAAe,OAAA,EAAO;AAC9C,EAAA,OAAO,cAAA,CAAe,UAAU,YAAY,CAAA;AAC9C;AAKM,SAAU,QAAA,CAAS,eAAe,MAAA,EAAM;AAC5C,EAAA,OAAO,cAAA,CAAe,SAAS,YAAY,CAAA;AAC7C;AAKM,SAAU,OAAA,CAAQ,eAAe,QAAA,EAAQ;AAC7C,EAAA,OAAO,cAAA,CAAe,QAAQ,YAAY,CAAA;AAC5C;AAKM,SAAU,OAAA,CAAQ,eAAe,KAAA,EAAK;AAC1C,EAAA,OAAO,cAAA,CAAe,QAAQ,YAAY,CAAA;AAC5C;AAiBM,SAAU,iBAAA,CAAqB,KAAa,YAAA,EAAe;AAC/D,EAAA,OAAO,MAAM,cAAA,CAAe,GAAA,EAAK,YAAY,CAAA;AAC/C;AAcM,SAAU,gBACd,MAAA,EAAS;AAET,EAAA,MAAM,SAAS,EAAA;AAEf,EAAA,KAAA,MAAW,OAAO,MAAA,EAAQ;AACxB,IAAA,MAAA,CAAO,GAAG,CAAA,GAAI,cAAA,CAAe,GAAA,EAAK,MAAA,CAAO,GAAG,CAAC,CAAA;AAAA,EAC/C;AAEA,EAAA,OAAO,MAAA;AACT;;;;"}