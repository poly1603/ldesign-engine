{"version":3,"file":"loaders.js","sources":["../../src/config/loaders.ts"],"sourcesContent":["/**\n * 配置加载器模块\n *\n * 提供多种配置加载器实现，支持从不同来源加载配置\n */\n\n// 配置项类型定义\n\nimport { getLogger } from '../logger/logger'\n\nexport type ConfigValue = string | number | boolean | null | undefined | ConfigObject | ConfigValue[]\n\nexport interface ConfigObject {\n  [key: string]: ConfigValue\n}\n\n// 配置加载器接口\nexport interface ConfigLoader {\n  load: () => Promise<ConfigObject> | ConfigObject\n  watch?: (callback: (config: ConfigObject) => void) => (() => void) | void\n}\n\n/**\n * 环境变量配置加载器\n *\n * 从环境变量中加载配置，支持自定义前缀\n *\n * @example\n * ```ts\n * const loader = new EnvironmentConfigLoader('APP_')\n * const config = loader.load()\n * ```\n */\nexport class EnvironmentConfigLoader implements ConfigLoader {\n  private logger = getLogger('EnvironmentConfigLoader')\n\n  constructor(private prefix: string = 'VUE_APP_') {}\n\n  load(): ConfigObject {\n    const config: ConfigObject = {}\n\n    // 在浏览器环境中，只能访问通过 Vite 或 webpack 注入的环境变量\n    try {\n      // 检查是否在Node.js环境中\n      const processKey = 'process'\n      const processEnv = (globalThis as unknown as Record<string, { env?: Record<string, string> }>)?.[processKey]?.env\n      if (processEnv) {\n        Object.keys(processEnv).forEach((key) => {\n          if (key.startsWith(this.prefix)) {\n            const configKey = key.substring(this.prefix.length).toLowerCase()\n            const value = processEnv[key]\n\n            // 尝试解析为合适的类型\n            config[configKey] = this.parseValue(value)\n          }\n        })\n      }\n    }\n    catch {\n      // 在浏览器环境中，process 可能不可用\n    }\n\n    return config\n  }\n\n  private parseValue(value: string | undefined): ConfigValue {\n    if (value === undefined)\n      return undefined\n\n    // 尝试解析为布尔值\n    if (value.toLowerCase() === 'true')\n      return true\n    if (value.toLowerCase() === 'false')\n      return false\n\n    // 尝试解析为数字\n    const numValue = Number(value)\n    if (!Number.isNaN(numValue) && Number.isFinite(numValue))\n      return numValue\n\n    // 尝试解析为 JSON\n    try {\n      return JSON.parse(value)\n    }\n    catch {\n      return value // 返回原始字符串\n    }\n  }\n}\n\n/**\n * JSON 文件配置加载器\n *\n * 从远程 JSON 文件加载配置，支持热重载\n *\n * @example\n * ```ts\n * const loader = new JsonConfigLoader('/config.json')\n * const config = await loader.load()\n * ```\n */\nexport class JsonConfigLoader implements ConfigLoader {\n  private logger = getLogger('JsonConfigLoader')\n\n  constructor(private configPath: string) {}\n\n  async load(): Promise<ConfigObject> {\n    try {\n      const response = await fetch(this.configPath)\n      if (!response.ok) {\n        throw new Error(`Failed to load config from ${this.configPath}`)\n      }\n      return await response.json()\n    }\n    catch (error) {\n      this.logger.warn(`Failed to load config from ${this.configPath}:`, error)\n      return {}\n    }\n  }\n\n  watch(callback: (config: ConfigObject) => void): (() => void) | void {\n    // 在生产环境中，可以实现文件监听逻辑\n    // 这里提供一个简单的轮询实现\n    const interval = setInterval(async () => {\n      try {\n        const newConfig = await this.load()\n        callback(newConfig)\n      }\n      catch (error) {\n        this.logger.error('Config watch error:', error)\n      }\n    }, 5000) // 每5秒检查一次\n\n    return () => clearInterval(interval)\n  }\n}\n\n/**\n * 内存配置加载器\n *\n * 从内存中加载配置，适用于测试和简单场景\n *\n * @example\n * ```ts\n * const loader = new MemoryConfigLoader({ apiUrl: 'https://api.example.com' })\n * const config = loader.load()\n * ```\n */\nexport class MemoryConfigLoader implements ConfigLoader {\n  constructor(private config: ConfigObject) {}\n\n  load(): ConfigObject {\n    return { ...this.config }\n  }\n\n  updateConfig(updates: Partial<ConfigObject>): void {\n    Object.assign(this.config, updates)\n  }\n}\n\n/**\n * LocalStorage 配置加载器\n *\n * 从浏览器 LocalStorage 加载配置\n *\n * @example\n * ```ts\n * const loader = new LocalStorageConfigLoader('app-config')\n * const config = loader.load()\n * ```\n */\nexport class LocalStorageConfigLoader implements ConfigLoader {\n  private logger = getLogger('LocalStorageConfigLoader')\n\n  constructor(private key: string) {}\n\n  load(): ConfigObject {\n    try {\n      const stored = localStorage.getItem(this.key)\n      if (stored) {\n        return JSON.parse(stored)\n      }\n    }\n    catch (error) {\n      this.logger.warn(`Failed to load config from localStorage:`, error)\n    }\n    return {}\n  }\n\n  save(config: ConfigObject): void {\n    try {\n      localStorage.setItem(this.key, JSON.stringify(config))\n    }\n    catch (error) {\n      this.logger.error(`Failed to save config to localStorage:`, error)\n    }\n  }\n\n  watch(callback: (config: ConfigObject) => void): (() => void) | void {\n    // 监听 storage 事件\n    const handler = (event: StorageEvent) => {\n      if (event.key === this.key && event.newValue) {\n        try {\n          const newConfig = JSON.parse(event.newValue)\n          callback(newConfig)\n        }\n        catch (error) {\n          this.logger.error('Failed to parse storage event:', error)\n        }\n      }\n    }\n\n    window.addEventListener('storage', handler)\n    return () => window.removeEventListener('storage', handler)\n  }\n}\n\n/**\n * 组合配置加载器\n *\n * 按顺序加载多个配置源，后面的配置会覆盖前面的\n *\n * @example\n * ```ts\n * const loader = new CompositeConfigLoader([\n *   new EnvironmentConfigLoader(),\n *   new JsonConfigLoader('/config.json'),\n *   new LocalStorageConfigLoader('user-config')\n * ])\n * const config = await loader.load()\n * ```\n */\nexport class CompositeConfigLoader implements ConfigLoader {\n  private logger = getLogger('CompositeConfigLoader')\n\n  constructor(private loaders: ConfigLoader[]) {}\n\n  async load(): Promise<ConfigObject> {\n    let config: ConfigObject = {}\n\n    for (const loader of this.loaders) {\n      try {\n        const loadedConfig = await loader.load()\n        config = { ...config, ...loadedConfig }\n      }\n      catch (error) {\n        this.logger.error('Failed to load config from loader:', error)\n      }\n    }\n\n    return config\n  }\n\n  watch(callback: (config: ConfigObject) => void): (() => void) | void {\n    const unwatchers: Array<() => void> = []\n\n    for (const loader of this.loaders) {\n      if (loader.watch) {\n        const unwatcher = loader.watch(callback)\n        if (unwatcher) {\n          unwatchers.push(unwatcher)\n        }\n      }\n    }\n\n    return () => {\n      unwatchers.forEach(unwatch => unwatch())\n    }\n  }\n}\n"],"names":[],"mappings":"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"}