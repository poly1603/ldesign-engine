{"version":3,"file":"useEngine.js","sources":["../../../src/vue/composables/useEngine.ts"],"sourcesContent":["import type { Engine } from '../../types'\r\nimport { computed, type ComputedRef, getCurrentInstance, inject } from 'vue'\r\n\r\n/**\r\n * 获取引擎实例的组合式函数\r\n *\r\n * @returns 引擎实例\r\n * @throws 如果引擎未找到则抛出错误\r\n *\r\n * @example\r\n * ```vue\r\n * <script setup>\r\n * import { useEngine } from '@ldesign/engine'\r\n *\r\n * const engine = useEngine()\r\n * logger.debug('App name:', engine.config.get('app.name'))\r\n * </script>\r\n * ```\r\n */\r\nexport function useEngine(): Engine {\r\n  // 尝试从注入中获取\r\n  const injectedEngine = inject<Engine>('engine')\r\n  if (injectedEngine) {\r\n    return injectedEngine\r\n  }\r\n\r\n  // 尝试从全局属性中获取\r\n  const instance = getCurrentInstance()\r\n  if (instance?.appContext.app.config.globalProperties.$engine) {\r\n    return instance.appContext.app.config.globalProperties.$engine\r\n  }\r\n\r\n  // 尝试从全局变量中获取（开发环境）\r\n  if (typeof window !== 'undefined' && (window as { __LDESIGN_ENGINE__?: Engine }).__LDESIGN_ENGINE__) {\r\n    return (window as { __LDESIGN_ENGINE__?: Engine }).__LDESIGN_ENGINE__ as Engine\r\n  }\r\n\r\n  throw new Error(\r\n    'Engine instance not found. Make sure the engine is properly initialized and the Vue app is using the engine plugin.'\r\n  )\r\n}\r\n\r\n/**\r\n * 检查引擎是否可用的组合式函数\r\n *\r\n * @returns 引擎是否可用的响应式引用\r\n *\r\n * @example\r\n * ```vue\r\n * <script setup>\r\n * import { useEngineAvailable } from '@ldesign/engine'\r\n *\r\n * const isEngineAvailable = useEngineAvailable()\r\n * </script>\r\n *\r\n * <template>\r\n *   <div v-if=\"isEngineAvailable\">\r\n *     Engine is ready!\r\n *   </div>\r\n * </template>\r\n * ```\r\n */\r\nexport function useEngineAvailable(): ComputedRef<boolean> {\r\n  return computed(() => {\r\n    try {\r\n      useEngine()\r\n      return true\r\n    } catch {\r\n      return false\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * 获取引擎配置的组合式函数\r\n */\r\nexport function useEngineConfig() {\r\n  const engine = useEngine()\r\n  return engine.config\r\n}\r\n\r\n/**\r\n * 获取引擎插件管理器的组合式函数\r\n */\r\nexport function useEnginePlugins() {\r\n  const engine = useEngine()\r\n  return engine.plugins\r\n}\r\n\r\n/**\r\n * 获取引擎中间件管理器的组合式函数\r\n */\r\nexport function useEngineMiddleware() {\r\n  const engine = useEngine()\r\n  return engine.middleware\r\n}\r\n\r\n/**\r\n * 获取引擎事件管理器的组合式函数\r\n */\r\nexport function useEngineEvents() {\r\n  const engine = useEngine()\r\n  return engine.events\r\n}\r\n\r\n/**\r\n * 获取引擎状态管理器的组合式函数\r\n */\r\nexport function useEngineState() {\r\n  const engine = useEngine()\r\n  return engine.state\r\n}\r\n\r\n/**\r\n * 获取引擎日志器的组合式函数\r\n */\r\nexport function useEngineLogger() {\r\n  const engine = useEngine()\r\n  return engine.logger\r\n}\r\n\r\n/**\r\n * 获取引擎通知管理器的组合式函数\r\n */\r\nexport function useEngineNotifications() {\r\n  const engine = useEngine()\r\n  return engine.notifications\r\n}\r\n\r\n/**\r\n * 获取引擎错误管理器的组合式函数\r\n */\r\nexport function useEngineErrors() {\r\n  const engine = useEngine()\r\n  return engine.errors\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;SAmBgB,SAAA,GAAS;AAEvB,EAAA,MAAM,cAAA,GAAiB,OAAe,QAAQ,CAAA;AAC9C,EAAA,IAAI,cAAA,EAAgB;AAClB,IAAA,OAAO,cAAA;AAAA,EACT;AAGA,EAAA,MAAM,WAAW,kBAAA,EAAkB;AACnC,EAAA,IAAI,QAAA,EAAU,UAAA,CAAW,GAAA,CAAI,MAAA,CAAO,iBAAiB,OAAA,EAAS;AAC5D,IAAA,OAAO,QAAA,CAAS,UAAA,CAAW,GAAA,CAAI,MAAA,CAAO,gBAAA,CAAiB,OAAA;AAAA,EACzD;AAGA,EAAA,IAAI,OAAO,MAAA,KAAW,WAAA,IAAgB,MAAA,CAA2C,kBAAA,EAAoB;AACnG,IAAA,OAAQ,MAAA,CAA2C,kBAAA;AAAA,EACrD;AAEA,EAAA,MAAM,IAAI,MACR,qHAAqH,CAAA;AAEzH;SAsBgB,kBAAA,GAAkB;AAChC,EAAA,OAAO,SAAS,MAAK;AACnB,IAAA,IAAI;AACF,MAAA,SAAA;AACA,MAAA,OAAO,IAAA;AAAA,IACT,CAAA,CAAA,MAAQ;AACN,MAAA,OAAO,KAAA;AAAA,IACT;AAAA,EACF,CAAC,CAAA;AACH;SAKgB,eAAA,GAAe;AAC7B,EAAA,MAAM,SAAS,SAAA,EAAS;AACxB,EAAA,OAAO,MAAA,CAAO,MAAA;AAChB;SAKgB,gBAAA,GAAgB;AAC9B,EAAA,MAAM,SAAS,SAAA,EAAS;AACxB,EAAA,OAAO,MAAA,CAAO,OAAA;AAChB;SAKgB,mBAAA,GAAmB;AACjC,EAAA,MAAM,SAAS,SAAA,EAAS;AACxB,EAAA,OAAO,MAAA,CAAO,UAAA;AAChB;SAKgB,eAAA,GAAe;AAC7B,EAAA,MAAM,SAAS,SAAA,EAAS;AACxB,EAAA,OAAO,MAAA,CAAO,MAAA;AAChB;SAKgB,cAAA,GAAc;AAC5B,EAAA,MAAM,SAAS,SAAA,EAAS;AACxB,EAAA,OAAO,MAAA,CAAO,KAAA;AAChB;SAKgB,eAAA,GAAe;AAC7B,EAAA,MAAM,SAAS,SAAA,EAAS;AACxB,EAAA,OAAO,MAAA,CAAO,MAAA;AAChB;SAKgB,sBAAA,GAAsB;AACpC,EAAA,MAAM,SAAS,SAAA,EAAS;AACxB,EAAA,OAAO,MAAA,CAAO,aAAA;AAChB;SAKgB,eAAA,GAAe;AAC7B,EAAA,MAAM,SAAS,SAAA,EAAS;AACxB,EAAA,OAAO,MAAA,CAAO,MAAA;AAChB;;;;"}