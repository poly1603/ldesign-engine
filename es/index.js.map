{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * @ldesign/engine - Vue3应用引擎\n *\n * 🚀 一个强大而简洁的Vue3应用引擎，通过统一的API配置所有功能\n *\n * @example\n * ```typescript\n * import { createEngineApp } from '@ldesign/engine'\n *\n * const engine = await createEngineApp({\n *   rootComponent: App,\n *   mountElement: '#app',\n *   config: {\n *     name: 'My App',\n *     version: '1.0.0',\n *     debug: true\n *   },\n *   features: {\n *     enableCaching: true,\n *     enablePerformanceMonitoring: true\n *   },\n *   plugins: [routerPlugin, storePlugin]\n * })\n * ```\n */\n\n// 插件状态管理\nexport {\n  createSharedState,\n  useDark,\n  useLocale,\n  usePluginState,\n  usePluginStates,\n  useSize,\n  useTheme\n} from './composables/use-plugin-state'\n\n// ==================== 核心导出 ====================\n// 统一的应用创建函数\nexport {\n  createAndMountEngineApp,\n  createEngineApp,\n  type EngineAppOptions\n} from './core/create-engine-app'\n\n// 模块加载器（新增 - 支持动态导入和Tree-Shaking）\nexport {\n  createModuleLoader,\n  ModuleLoader,\n  type ModuleLoaderConfig,\n  type ModuleMetadata,\n  type ModuleLoadOptions,\n  getGlobalModuleLoader,\n  setGlobalModuleLoader,\n  LazyModule\n} from './core/module-loader'\n\n// 对象池管理（新增 - 减少GC压力）\nexport {\n  createObjectPoolManager,\n  ObjectPoolManager,\n  ObjectPool,\n  TaskPool,\n  NotificationPool,\n  RequestPool,\n  getGlobalObjectPoolManager,\n  setGlobalObjectPoolManager,\n  Pooled\n} from './core/object-pools'\n\n// ==================== Locale 模块导出 ====================\nexport {\n  createLocaleAwarePlugin,\n  type CreateLocaleAwarePluginOptions,\n  createLocaleManager,\n  createSimpleLocaleAwarePlugin,\n  type LocaleAwarePlugin,\n  LocaleManager,\n  type LocaleManagerOptions\n} from './locale'\n\n// 性能监控模块\nexport * from './performance/performance-monitor'\n\n// 性能分析器（新增 - 函数和组件性能追踪）\nexport {\n  createProfiler,\n  Profiler,\n  type ProfilerConfig,\n  type FunctionCallRecord,\n  type ComponentRenderRecord,\n  type PerformanceProfileReport,\n  Profile,\n  getGlobalProfiler,\n  setGlobalProfiler\n} from './performance/profiler'\n\n// ==================== 插件导出 ====================\nexport { createI18nEnginePlugin } from './plugins/i18n'\n\nexport type { I18nEnginePluginOptions } from './plugins/i18n'\n\n// 配置类型\nexport type {\n  ConfigManager,\n  EngineConfig\n} from './types/config'\n\n// ==================== 类型导出 ====================\n// 引擎核心类型\nexport type { Engine } from './types/engine'\n\n// 日志类型\nexport type {\n  LogEntry,\n  Logger,\n  LogLevel\n} from './types/logger'\n\n// 中间件类型\nexport type {\n  Middleware,\n  MiddlewareContext,\n  MiddlewareNext,\n  MiddlewareRequest,\n  MiddlewareResponse\n} from './types/middleware'\n// 插件系统类型\nexport type {\n  Plugin,\n  PluginContext,\n  PluginInfo,\n  PluginMetadata,\n  PluginStatus\n} from './types/plugin'\n\n// 常用工具函数\nexport {\n  debounce,\n  deepClone,\n  generateId,\n  throttle,\n  // 新增 - LRU缓存\n  createLRUCache,\n  LRUCache,\n  type LRUCacheOptions\n} from './utils/index'\n\n// 智能缓存策略（新增）\nexport {\n  SmartCacheStrategy,\n  createSmartCacheStrategy,\n  type SmartCacheConfig\n} from './cache/smart-cache'\n\n// ==================== 实用工具导出 ====================\n// Vue组合式 API\nexport {\n  useCache,\n  useConfig,\n  useEngine,\n  useErrorHandler,\n  useEvents,\n  useLogger,\n  useNotification,\n  usePerformance,\n  usePlugins\n} from './vue/composables'\n\n// ==================== 版本信息 ====================\nexport const version = '1.0.0'\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AA0KO,MAAM,OAAA,GAAU;;;;"}