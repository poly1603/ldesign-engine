{"version":3,"file":"i18n.js","sources":["../../src/plugins/i18n.ts"],"sourcesContent":["import type { App } from 'vue'\r\nimport type { I18nAdapter } from '../types/base'\r\nimport type { Engine } from '../types/engine'\r\nimport type { Plugin, PluginContext } from '../types/plugin'\r\nimport { ref } from 'vue'\r\n\r\nexport interface I18nEnginePluginOptions {\r\n  adapter?: I18nAdapter\r\n  defaultLocale?: string\r\n  onLocaleChange?: (newLocale: string, oldLocale: string) => void | Promise<void>\r\n}\r\n\r\n/**\r\n * @deprecated Use `createI18nEnginePlugin` from '@ldesign/i18n' instead for full i18n functionality\r\n * \r\n * This is a simplified i18n adapter integration for engine.\r\n * For complete internationalization support, use @ldesign/i18n package:\r\n * \r\n * @example\r\n * ```typescript\r\n * import { createI18nEnginePlugin } from '@ldesign/i18n'\r\n * \r\n * const i18nPlugin = createI18nEnginePlugin({\r\n *   locale: 'zh-CN',\r\n *   messages: { ... }\r\n * })\r\n * ```\r\n * \r\n * @see https://github.com/ldesign/ldesign/tree/main/packages/i18n\r\n */\r\nexport function createI18nEnginePlugin(options: I18nEnginePluginOptions = {}): Plugin {\r\n  return {\r\n    name: 'i18n-engine-plugin',\r\n    version: '1.0.0',\r\n\r\n    async install(context: PluginContext<Engine>) {\r\n      const { engine } = context\r\n      const app = (engine as any).app as App\r\n      \r\n      // 如果提供了适配器，设置它\r\n      if (options.adapter && (engine as any).setI18n) {\r\n        (engine as any).setI18n(options.adapter);\r\n        (engine as any).logger?.info('I18n adapter installed')\r\n      }\r\n\r\n      // 设置全局响应式语言状态\r\n      const defaultLocale = options.defaultLocale || 'en'\r\n      if ((engine as any).state) {\r\n        (engine as any).state.set('i18n.locale', defaultLocale);\r\n        (engine as any).state.set('i18n.fallbackLocale', defaultLocale)\r\n      }\r\n      \r\n      // 创建响应式语言引用\r\n      const currentLocale = ref(defaultLocale)\r\n      \r\n      // 监听 engine state 的语言变化\r\n      let unwatch = () => {}\r\n      if ((engine as any).state?.watch) {\r\n        unwatch = (engine as any).state.watch('i18n.locale', async (newLocale: string, oldLocale: string) => {\r\n          if (newLocale && newLocale !== oldLocale) {\r\n            currentLocale.value = newLocale\r\n            \r\n            // 调用语言变更钩子\r\n            if (options.onLocaleChange) {\r\n              try {\r\n                await options.onLocaleChange(newLocale, oldLocale)\r\n              } catch (error) {\r\n                (engine as any).logger?.error('Error in locale change hook', { error })\r\n              }\r\n            }\r\n            \r\n            // 触发语言变更事件\r\n            if ((engine as any).events?.emit) {\r\n              (engine as any).events.emit('i18n:locale-changed', { \r\n                newLocale, \r\n                oldLocale,\r\n                timestamp: Date.now() \r\n              })\r\n            }\r\n          }\r\n        })\r\n      }\r\n      \r\n      // 提供全局方法来改变语言\r\n      const setLocale = (locale: string) => {\r\n        if ((engine as any).state) {\r\n          (engine as any).state.set('i18n.locale', locale)\r\n        }\r\n        if ((engine as any).i18n?.setLocale) {\r\n          (engine as any).i18n.setLocale(locale)\r\n        }\r\n      }\r\n      \r\n      // 提供全局方法来获取当前语言\r\n      const getLocale = (): string => {\r\n        const localeValue = (engine as any).state?.get('i18n.locale')\r\n        return typeof localeValue === 'string' ? localeValue : defaultLocale\r\n      }\r\n      \r\n      // 将方法注入到 Vue 应用中\r\n      app.provide('engine-i18n', (engine as any).i18n)\r\n      app.provide('engine-locale', currentLocale)\r\n      app.provide('setEngineLocale', setLocale)\r\n      app.provide('getEngineLocale', getLocale)\r\n      \r\n      // 全局属性\r\n      app.config.globalProperties.$engineLocale = currentLocale\r\n      app.config.globalProperties.$setEngineLocale = setLocale\r\n      app.config.globalProperties.$getEngineLocale = getLocale\r\n\r\n      ;(engine as any).logger?.debug('I18n engine plugin installed with reactive locale support')\r\n      \r\n      // 清理函数 - use onUnmount instead\r\n      if (app.unmount) {\r\n        const originalUnmount = app.unmount\r\n        app.unmount = function() {\r\n          unwatch()\r\n          originalUnmount.call(this)\r\n        }\r\n      }\r\n    },\r\n  }\r\n}"],"names":[],"mappings":"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"}